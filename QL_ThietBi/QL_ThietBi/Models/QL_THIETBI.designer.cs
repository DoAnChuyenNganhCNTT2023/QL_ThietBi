#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QL_ThietBi.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_THIETBI")]
	public partial class QL_THIETBIDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBAIHOC(BAIHOC instance);
    partial void UpdateBAIHOC(BAIHOC instance);
    partial void DeleteBAIHOC(BAIHOC instance);
    partial void InsertTHIETBI(THIETBI instance);
    partial void UpdateTHIETBI(THIETBI instance);
    partial void DeleteTHIETBI(THIETBI instance);
    partial void InsertCHITIETPHIEUMUON(CHITIETPHIEUMUON instance);
    partial void UpdateCHITIETPHIEUMUON(CHITIETPHIEUMUON instance);
    partial void DeleteCHITIETPHIEUMUON(CHITIETPHIEUMUON instance);
    partial void InsertCTDAY(CTDAY instance);
    partial void UpdateCTDAY(CTDAY instance);
    partial void DeleteCTDAY(CTDAY instance);
    partial void InsertCTPHEUXL(CTPHEUXL instance);
    partial void UpdateCTPHEUXL(CTPHEUXL instance);
    partial void DeleteCTPHEUXL(CTPHEUXL instance);
    partial void InsertCTPHIEUDAT(CTPHIEUDAT instance);
    partial void UpdateCTPHIEUDAT(CTPHIEUDAT instance);
    partial void DeleteCTPHIEUDAT(CTPHIEUDAT instance);
    partial void InsertCTPHIEUHH(CTPHIEUHH instance);
    partial void UpdateCTPHIEUHH(CTPHIEUHH instance);
    partial void DeleteCTPHIEUHH(CTPHIEUHH instance);
    partial void InsertCTPHIEUNGHIEMTHU(CTPHIEUNGHIEMTHU instance);
    partial void UpdateCTPHIEUNGHIEMTHU(CTPHIEUNGHIEMTHU instance);
    partial void DeleteCTPHIEUNGHIEMTHU(CTPHIEUNGHIEMTHU instance);
    partial void InsertCTPHIEUTRA(CTPHIEUTRA instance);
    partial void UpdateCTPHIEUTRA(CTPHIEUTRA instance);
    partial void DeleteCTPHIEUTRA(CTPHIEUTRA instance);
    partial void InsertCTTHANHLY(CTTHANHLY instance);
    partial void UpdateCTTHANHLY(CTTHANHLY instance);
    partial void DeleteCTTHANHLY(CTTHANHLY instance);
    partial void InsertCTTHIETBITHEOLOP(CTTHIETBITHEOLOP instance);
    partial void UpdateCTTHIETBITHEOLOP(CTTHIETBITHEOLOP instance);
    partial void DeleteCTTHIETBITHEOLOP(CTTHIETBITHEOLOP instance);
    partial void InsertGIAOVIEN(GIAOVIEN instance);
    partial void UpdateGIAOVIEN(GIAOVIEN instance);
    partial void DeleteGIAOVIEN(GIAOVIEN instance);
    partial void InsertHOCSINH(HOCSINH instance);
    partial void UpdateHOCSINH(HOCSINH instance);
    partial void DeleteHOCSINH(HOCSINH instance);
    partial void InsertKHOILOP(KHOILOP instance);
    partial void UpdateKHOILOP(KHOILOP instance);
    partial void DeleteKHOILOP(KHOILOP instance);
    partial void InsertLICHHOC(LICHHOC instance);
    partial void UpdateLICHHOC(LICHHOC instance);
    partial void DeleteLICHHOC(LICHHOC instance);
    partial void InsertLOAIPHONG(LOAIPHONG instance);
    partial void UpdateLOAIPHONG(LOAIPHONG instance);
    partial void DeleteLOAIPHONG(LOAIPHONG instance);
    partial void InsertLOAITHIETBI(LOAITHIETBI instance);
    partial void UpdateLOAITHIETBI(LOAITHIETBI instance);
    partial void DeleteLOAITHIETBI(LOAITHIETBI instance);
    partial void InsertLOP(LOP instance);
    partial void UpdateLOP(LOP instance);
    partial void DeleteLOP(LOP instance);
    partial void InsertMONHOC(MONHOC instance);
    partial void UpdateMONHOC(MONHOC instance);
    partial void DeleteMONHOC(MONHOC instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHIEUDAT(PHIEUDAT instance);
    partial void UpdatePHIEUDAT(PHIEUDAT instance);
    partial void DeletePHIEUDAT(PHIEUDAT instance);
    partial void InsertPHIEUDSTHIETBITHEOLOP(PHIEUDSTHIETBITHEOLOP instance);
    partial void UpdatePHIEUDSTHIETBITHEOLOP(PHIEUDSTHIETBITHEOLOP instance);
    partial void DeletePHIEUDSTHIETBITHEOLOP(PHIEUDSTHIETBITHEOLOP instance);
    partial void InsertPHIEUGHINHANHUHONG(PHIEUGHINHANHUHONG instance);
    partial void UpdatePHIEUGHINHANHUHONG(PHIEUGHINHANHUHONG instance);
    partial void DeletePHIEUGHINHANHUHONG(PHIEUGHINHANHUHONG instance);
    partial void InsertPHIEUMUON(PHIEUMUON instance);
    partial void UpdatePHIEUMUON(PHIEUMUON instance);
    partial void DeletePHIEUMUON(PHIEUMUON instance);
    partial void InsertPHIEUNGHIEMTHU(PHIEUNGHIEMTHU instance);
    partial void UpdatePHIEUNGHIEMTHU(PHIEUNGHIEMTHU instance);
    partial void DeletePHIEUNGHIEMTHU(PHIEUNGHIEMTHU instance);
    partial void InsertPHIEUNHAP(PHIEUNHAP instance);
    partial void UpdatePHIEUNHAP(PHIEUNHAP instance);
    partial void DeletePHIEUNHAP(PHIEUNHAP instance);
    partial void InsertPHIEUTHANHLY(PHIEUTHANHLY instance);
    partial void UpdatePHIEUTHANHLY(PHIEUTHANHLY instance);
    partial void DeletePHIEUTHANHLY(PHIEUTHANHLY instance);
    partial void InsertPHIEUTRA(PHIEUTRA instance);
    partial void UpdatePHIEUTRA(PHIEUTRA instance);
    partial void DeletePHIEUTRA(PHIEUTRA instance);
    partial void InsertPHIEUXL(PHIEUXL instance);
    partial void UpdatePHIEUXL(PHIEUXL instance);
    partial void DeletePHIEUXL(PHIEUXL instance);
    partial void InsertPHONG(PHONG instance);
    partial void UpdatePHONG(PHONG instance);
    partial void DeletePHONG(PHONG instance);
    #endregion
		
		public QL_THIETBIDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_THIETBIConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QL_THIETBIDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_THIETBIDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_THIETBIDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_THIETBIDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BAIHOC> BAIHOCs
		{
			get
			{
				return this.GetTable<BAIHOC>();
			}
		}
		
		public System.Data.Linq.Table<THIETBI> THIETBIs
		{
			get
			{
				return this.GetTable<THIETBI>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETPHIEUMUON> CHITIETPHIEUMUONs
		{
			get
			{
				return this.GetTable<CHITIETPHIEUMUON>();
			}
		}
		
		public System.Data.Linq.Table<CTDAY> CTDAYs
		{
			get
			{
				return this.GetTable<CTDAY>();
			}
		}
		
		public System.Data.Linq.Table<CTPHEUXL> CTPHEUXLs
		{
			get
			{
				return this.GetTable<CTPHEUXL>();
			}
		}
		
		public System.Data.Linq.Table<CTPHIEUDAT> CTPHIEUDATs
		{
			get
			{
				return this.GetTable<CTPHIEUDAT>();
			}
		}
		
		public System.Data.Linq.Table<CTPHIEUHH> CTPHIEUHHs
		{
			get
			{
				return this.GetTable<CTPHIEUHH>();
			}
		}
		
		public System.Data.Linq.Table<CTPHIEUNGHIEMTHU> CTPHIEUNGHIEMTHUs
		{
			get
			{
				return this.GetTable<CTPHIEUNGHIEMTHU>();
			}
		}
		
		public System.Data.Linq.Table<CTPHIEUNHAP> CTPHIEUNHAPs
		{
			get
			{
				return this.GetTable<CTPHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<CTPHIEUTRA> CTPHIEUTRAs
		{
			get
			{
				return this.GetTable<CTPHIEUTRA>();
			}
		}
		
		public System.Data.Linq.Table<CTTHANHLY> CTTHANHLies
		{
			get
			{
				return this.GetTable<CTTHANHLY>();
			}
		}
		
		public System.Data.Linq.Table<CTTHIETBITHEOLOP> CTTHIETBITHEOLOPs
		{
			get
			{
				return this.GetTable<CTTHIETBITHEOLOP>();
			}
		}
		
		public System.Data.Linq.Table<GIAOVIEN> GIAOVIENs
		{
			get
			{
				return this.GetTable<GIAOVIEN>();
			}
		}
		
		public System.Data.Linq.Table<HOCSINH> HOCSINHs
		{
			get
			{
				return this.GetTable<HOCSINH>();
			}
		}
		
		public System.Data.Linq.Table<KHOILOP> KHOILOPs
		{
			get
			{
				return this.GetTable<KHOILOP>();
			}
		}
		
		public System.Data.Linq.Table<LICHHOC> LICHHOCs
		{
			get
			{
				return this.GetTable<LICHHOC>();
			}
		}
		
		public System.Data.Linq.Table<LOAIPHONG> LOAIPHONGs
		{
			get
			{
				return this.GetTable<LOAIPHONG>();
			}
		}
		
		public System.Data.Linq.Table<LOAITHIETBI> LOAITHIETBIs
		{
			get
			{
				return this.GetTable<LOAITHIETBI>();
			}
		}
		
		public System.Data.Linq.Table<LOP> LOPs
		{
			get
			{
				return this.GetTable<LOP>();
			}
		}
		
		public System.Data.Linq.Table<MONHOC> MONHOCs
		{
			get
			{
				return this.GetTable<MONHOC>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUDAT> PHIEUDATs
		{
			get
			{
				return this.GetTable<PHIEUDAT>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUDSTHIETBITHEOLOP> PHIEUDSTHIETBITHEOLOPs
		{
			get
			{
				return this.GetTable<PHIEUDSTHIETBITHEOLOP>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUGHINHANHUHONG> PHIEUGHINHANHUHONGs
		{
			get
			{
				return this.GetTable<PHIEUGHINHANHUHONG>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUMUON> PHIEUMUONs
		{
			get
			{
				return this.GetTable<PHIEUMUON>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNGHIEMTHU> PHIEUNGHIEMTHUs
		{
			get
			{
				return this.GetTable<PHIEUNGHIEMTHU>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this.GetTable<PHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUTHANHLY> PHIEUTHANHLies
		{
			get
			{
				return this.GetTable<PHIEUTHANHLY>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUTRA> PHIEUTRAs
		{
			get
			{
				return this.GetTable<PHIEUTRA>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUXL> PHIEUXLs
		{
			get
			{
				return this.GetTable<PHIEUXL>();
			}
		}
		
		public System.Data.Linq.Table<PHONG> PHONGs
		{
			get
			{
				return this.GetTable<PHONG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAIHOC")]
	public partial class BAIHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MABAI;
		
		private string _MAMON;
		
		private string _TENBAI;
		
		private EntitySet<LICHHOC> _LICHHOCs;
		
		private EntitySet<PHIEUDSTHIETBITHEOLOP> _PHIEUDSTHIETBITHEOLOPs;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMABAIChanging(string value);
    partial void OnMABAIChanged();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnTENBAIChanging(string value);
    partial void OnTENBAIChanged();
    #endregion
		
		public BAIHOC()
		{
			this._LICHHOCs = new EntitySet<LICHHOC>(new Action<LICHHOC>(this.attach_LICHHOCs), new Action<LICHHOC>(this.detach_LICHHOCs));
			this._PHIEUDSTHIETBITHEOLOPs = new EntitySet<PHIEUDSTHIETBITHEOLOP>(new Action<PHIEUDSTHIETBITHEOLOP>(this.attach_PHIEUDSTHIETBITHEOLOPs), new Action<PHIEUDSTHIETBITHEOLOP>(this.detach_PHIEUDSTHIETBITHEOLOPs));
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABAI", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MABAI
		{
			get
			{
				return this._MABAI;
			}
			set
			{
				if ((this._MABAI != value))
				{
					this.OnMABAIChanging(value);
					this.SendPropertyChanging();
					this._MABAI = value;
					this.SendPropertyChanged("MABAI");
					this.OnMABAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="VarChar(15)")]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENBAI", DbType="NVarChar(50)")]
		public string TENBAI
		{
			get
			{
				return this._TENBAI;
			}
			set
			{
				if ((this._TENBAI != value))
				{
					this.OnTENBAIChanging(value);
					this.SendPropertyChanging();
					this._TENBAI = value;
					this.SendPropertyChanged("TENBAI");
					this.OnTENBAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAIHOC_LICHHOC", Storage="_LICHHOCs", ThisKey="MABAI", OtherKey="MABAI")]
		public EntitySet<LICHHOC> LICHHOCs
		{
			get
			{
				return this._LICHHOCs;
			}
			set
			{
				this._LICHHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAIHOC_PHIEUDSTHIETBITHEOLOP", Storage="_PHIEUDSTHIETBITHEOLOPs", ThisKey="MABAI", OtherKey="MABAI")]
		public EntitySet<PHIEUDSTHIETBITHEOLOP> PHIEUDSTHIETBITHEOLOPs
		{
			get
			{
				return this._PHIEUDSTHIETBITHEOLOPs;
			}
			set
			{
				this._PHIEUDSTHIETBITHEOLOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_BAIHOC", Storage="_MONHOC", ThisKey="MAMON", OtherKey="MAMON", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.BAIHOCs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.BAIHOCs.Add(this);
						this._MAMON = value.MAMON;
					}
					else
					{
						this._MAMON = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LICHHOCs(LICHHOC entity)
		{
			this.SendPropertyChanging();
			entity.BAIHOC = this;
		}
		
		private void detach_LICHHOCs(LICHHOC entity)
		{
			this.SendPropertyChanging();
			entity.BAIHOC = null;
		}
		
		private void attach_PHIEUDSTHIETBITHEOLOPs(PHIEUDSTHIETBITHEOLOP entity)
		{
			this.SendPropertyChanging();
			entity.BAIHOC = this;
		}
		
		private void detach_PHIEUDSTHIETBITHEOLOPs(PHIEUDSTHIETBITHEOLOP entity)
		{
			this.SendPropertyChanging();
			entity.BAIHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THIETBI")]
	public partial class THIETBI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATB;
		
		private string _MALOAI;
		
		private string _TENTB;
		
		private System.Nullable<double> _GIA;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntitySet<CHITIETPHIEUMUON> _CHITIETPHIEUMUONs;
		
		private EntitySet<CTPHEUXL> _CTPHEUXLs;
		
		private EntitySet<CTPHIEUDAT> _CTPHIEUDATs;
		
		private EntitySet<CTPHIEUHH> _CTPHIEUHHs;
		
		private EntitySet<CTPHIEUNGHIEMTHU> _CTPHIEUNGHIEMTHUs;
		
		private EntitySet<CTPHIEUTRA> _CTPHIEUTRAs;
		
		private EntitySet<CTTHANHLY> _CTTHANHLies;
		
		private EntitySet<CTTHIETBITHEOLOP> _CTTHIETBITHEOLOPs;
		
		private EntityRef<LOAITHIETBI> _LOAITHIETBI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATBChanging(string value);
    partial void OnMATBChanged();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnTENTBChanging(string value);
    partial void OnTENTBChanged();
    partial void OnGIAChanging(System.Nullable<double> value);
    partial void OnGIAChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public THIETBI()
		{
			this._CHITIETPHIEUMUONs = new EntitySet<CHITIETPHIEUMUON>(new Action<CHITIETPHIEUMUON>(this.attach_CHITIETPHIEUMUONs), new Action<CHITIETPHIEUMUON>(this.detach_CHITIETPHIEUMUONs));
			this._CTPHEUXLs = new EntitySet<CTPHEUXL>(new Action<CTPHEUXL>(this.attach_CTPHEUXLs), new Action<CTPHEUXL>(this.detach_CTPHEUXLs));
			this._CTPHIEUDATs = new EntitySet<CTPHIEUDAT>(new Action<CTPHIEUDAT>(this.attach_CTPHIEUDATs), new Action<CTPHIEUDAT>(this.detach_CTPHIEUDATs));
			this._CTPHIEUHHs = new EntitySet<CTPHIEUHH>(new Action<CTPHIEUHH>(this.attach_CTPHIEUHHs), new Action<CTPHIEUHH>(this.detach_CTPHIEUHHs));
			this._CTPHIEUNGHIEMTHUs = new EntitySet<CTPHIEUNGHIEMTHU>(new Action<CTPHIEUNGHIEMTHU>(this.attach_CTPHIEUNGHIEMTHUs), new Action<CTPHIEUNGHIEMTHU>(this.detach_CTPHIEUNGHIEMTHUs));
			this._CTPHIEUTRAs = new EntitySet<CTPHIEUTRA>(new Action<CTPHIEUTRA>(this.attach_CTPHIEUTRAs), new Action<CTPHIEUTRA>(this.detach_CTPHIEUTRAs));
			this._CTTHANHLies = new EntitySet<CTTHANHLY>(new Action<CTTHANHLY>(this.attach_CTTHANHLies), new Action<CTTHANHLY>(this.detach_CTTHANHLies));
			this._CTTHIETBITHEOLOPs = new EntitySet<CTTHIETBITHEOLOP>(new Action<CTTHIETBITHEOLOP>(this.attach_CTTHIETBITHEOLOPs), new Action<CTTHIETBITHEOLOP>(this.detach_CTTHIETBITHEOLOPs));
			this._LOAITHIETBI = default(EntityRef<LOAITHIETBI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					this.OnMATBChanging(value);
					this.SendPropertyChanging();
					this._MATB = value;
					this.SendPropertyChanged("MATB");
					this.OnMATBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="VarChar(10)")]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					if (this._LOAITHIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTB", DbType="NVarChar(40)")]
		public string TENTB
		{
			get
			{
				return this._TENTB;
			}
			set
			{
				if ((this._TENTB != value))
				{
					this.OnTENTBChanging(value);
					this.SendPropertyChanging();
					this._TENTB = value;
					this.SendPropertyChanged("TENTB");
					this.OnTENTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float")]
		public System.Nullable<double> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CHITIETPHIEUMUON", Storage="_CHITIETPHIEUMUONs", ThisKey="MATB", OtherKey="MATB")]
		public EntitySet<CHITIETPHIEUMUON> CHITIETPHIEUMUONs
		{
			get
			{
				return this._CHITIETPHIEUMUONs;
			}
			set
			{
				this._CHITIETPHIEUMUONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTPHEUXL", Storage="_CTPHEUXLs", ThisKey="MATB", OtherKey="MATB")]
		public EntitySet<CTPHEUXL> CTPHEUXLs
		{
			get
			{
				return this._CTPHEUXLs;
			}
			set
			{
				this._CTPHEUXLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTPHIEUDAT", Storage="_CTPHIEUDATs", ThisKey="MATB", OtherKey="MATB")]
		public EntitySet<CTPHIEUDAT> CTPHIEUDATs
		{
			get
			{
				return this._CTPHIEUDATs;
			}
			set
			{
				this._CTPHIEUDATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTPHIEUHH", Storage="_CTPHIEUHHs", ThisKey="MATB", OtherKey="MATB")]
		public EntitySet<CTPHIEUHH> CTPHIEUHHs
		{
			get
			{
				return this._CTPHIEUHHs;
			}
			set
			{
				this._CTPHIEUHHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTPHIEUNGHIEMTHU", Storage="_CTPHIEUNGHIEMTHUs", ThisKey="MATB", OtherKey="MATB")]
		public EntitySet<CTPHIEUNGHIEMTHU> CTPHIEUNGHIEMTHUs
		{
			get
			{
				return this._CTPHIEUNGHIEMTHUs;
			}
			set
			{
				this._CTPHIEUNGHIEMTHUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTPHIEUTRA", Storage="_CTPHIEUTRAs", ThisKey="MATB", OtherKey="MATB")]
		public EntitySet<CTPHIEUTRA> CTPHIEUTRAs
		{
			get
			{
				return this._CTPHIEUTRAs;
			}
			set
			{
				this._CTPHIEUTRAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTTHANHLY", Storage="_CTTHANHLies", ThisKey="MATB", OtherKey="MATB")]
		public EntitySet<CTTHANHLY> CTTHANHLies
		{
			get
			{
				return this._CTTHANHLies;
			}
			set
			{
				this._CTTHANHLies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTTHIETBITHEOLOP", Storage="_CTTHIETBITHEOLOPs", ThisKey="MATB", OtherKey="MATB")]
		public EntitySet<CTTHIETBITHEOLOP> CTTHIETBITHEOLOPs
		{
			get
			{
				return this._CTTHIETBITHEOLOPs;
			}
			set
			{
				this._CTTHIETBITHEOLOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITHIETBI_THIETBI", Storage="_LOAITHIETBI", ThisKey="MALOAI", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAITHIETBI LOAITHIETBI
		{
			get
			{
				return this._LOAITHIETBI.Entity;
			}
			set
			{
				LOAITHIETBI previousValue = this._LOAITHIETBI.Entity;
				if (((previousValue != value) 
							|| (this._LOAITHIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAITHIETBI.Entity = null;
						previousValue.THIETBIs.Remove(this);
					}
					this._LOAITHIETBI.Entity = value;
					if ((value != null))
					{
						value.THIETBIs.Add(this);
						this._MALOAI = value.MALOAI;
					}
					else
					{
						this._MALOAI = default(string);
					}
					this.SendPropertyChanged("LOAITHIETBI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPHIEUMUONs(CHITIETPHIEUMUON entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CHITIETPHIEUMUONs(CHITIETPHIEUMUON entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
		
		private void attach_CTPHEUXLs(CTPHEUXL entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CTPHEUXLs(CTPHEUXL entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
		
		private void attach_CTPHIEUDATs(CTPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CTPHIEUDATs(CTPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
		
		private void attach_CTPHIEUHHs(CTPHIEUHH entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CTPHIEUHHs(CTPHIEUHH entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
		
		private void attach_CTPHIEUNGHIEMTHUs(CTPHIEUNGHIEMTHU entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CTPHIEUNGHIEMTHUs(CTPHIEUNGHIEMTHU entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
		
		private void attach_CTPHIEUTRAs(CTPHIEUTRA entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CTPHIEUTRAs(CTPHIEUTRA entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
		
		private void attach_CTTHANHLies(CTTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CTTHANHLies(CTTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
		
		private void attach_CTTHIETBITHEOLOPs(CTTHIETBITHEOLOP entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CTTHIETBITHEOLOPs(CTTHIETBITHEOLOP entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETPHIEUMUON")]
	public partial class CHITIETPHIEUMUON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEUMUON;
		
		private string _MATB;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<THIETBI> _THIETBI;
		
		private EntityRef<PHIEUMUON> _PHIEUMUON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUMUONChanging(string value);
    partial void OnMAPHIEUMUONChanged();
    partial void OnMATBChanging(string value);
    partial void OnMATBChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public CHITIETPHIEUMUON()
		{
			this._THIETBI = default(EntityRef<THIETBI>);
			this._PHIEUMUON = default(EntityRef<PHIEUMUON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUMUON", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUMUON
		{
			get
			{
				return this._MAPHIEUMUON;
			}
			set
			{
				if ((this._MAPHIEUMUON != value))
				{
					if (this._PHIEUMUON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUMUONChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUMUON = value;
					this.SendPropertyChanged("MAPHIEUMUON");
					this.OnMAPHIEUMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATBChanging(value);
					this.SendPropertyChanging();
					this._MATB = value;
					this.SendPropertyChanged("MATB");
					this.OnMATBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CHITIETPHIEUMUON", Storage="_THIETBI", ThisKey="MATB", OtherKey="MATB", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CHITIETPHIEUMUONs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUMUONs.Add(this);
						this._MATB = value.MATB;
					}
					else
					{
						this._MATB = default(string);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUMUON_CHITIETPHIEUMUON", Storage="_PHIEUMUON", ThisKey="MAPHIEUMUON", OtherKey="MAPHIEUMUON", IsForeignKey=true)]
		public PHIEUMUON PHIEUMUON
		{
			get
			{
				return this._PHIEUMUON.Entity;
			}
			set
			{
				PHIEUMUON previousValue = this._PHIEUMUON.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUMUON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUMUON.Entity = null;
						previousValue.CHITIETPHIEUMUONs.Remove(this);
					}
					this._PHIEUMUON.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUMUONs.Add(this);
						this._MAPHIEUMUON = value.MAPHIEUMUON;
					}
					else
					{
						this._MAPHIEUMUON = default(string);
					}
					this.SendPropertyChanged("PHIEUMUON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDAY")]
	public partial class CTDAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAGV;
		
		private string _MAMON;
		
		private System.Nullable<int> _NAMHOC;
		
		private EntityRef<GIAOVIEN> _GIAOVIEN;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAGVChanging(string value);
    partial void OnMAGVChanged();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnNAMHOCChanging(System.Nullable<int> value);
    partial void OnNAMHOCChanged();
    #endregion
		
		public CTDAY()
		{
			this._GIAOVIEN = default(EntityRef<GIAOVIEN>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGV", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGV
		{
			get
			{
				return this._MAGV;
			}
			set
			{
				if ((this._MAGV != value))
				{
					if (this._GIAOVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAGVChanging(value);
					this.SendPropertyChanging();
					this._MAGV = value;
					this.SendPropertyChanged("MAGV");
					this.OnMAGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMHOC", DbType="Int")]
		public System.Nullable<int> NAMHOC
		{
			get
			{
				return this._NAMHOC;
			}
			set
			{
				if ((this._NAMHOC != value))
				{
					this.OnNAMHOCChanging(value);
					this.SendPropertyChanging();
					this._NAMHOC = value;
					this.SendPropertyChanged("NAMHOC");
					this.OnNAMHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_CTDAY", Storage="_GIAOVIEN", ThisKey="MAGV", OtherKey="MAGV", IsForeignKey=true)]
		public GIAOVIEN GIAOVIEN
		{
			get
			{
				return this._GIAOVIEN.Entity;
			}
			set
			{
				GIAOVIEN previousValue = this._GIAOVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAOVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAOVIEN.Entity = null;
						previousValue.CTDAYs.Remove(this);
					}
					this._GIAOVIEN.Entity = value;
					if ((value != null))
					{
						value.CTDAYs.Add(this);
						this._MAGV = value.MAGV;
					}
					else
					{
						this._MAGV = default(string);
					}
					this.SendPropertyChanged("GIAOVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_CTDAY", Storage="_MONHOC", ThisKey="MAMON", OtherKey="MAMON", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.CTDAYs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.CTDAYs.Add(this);
						this._MAMON = value.MAMON;
					}
					else
					{
						this._MAMON = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPHEUXL")]
	public partial class CTPHEUXL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEUXL;
		
		private string _MATB;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _TINHTRANG;
		
		private string _HUONGXL;
		
		private System.Nullable<double> _MUCDENBU;
		
		private EntityRef<THIETBI> _THIETBI;
		
		private EntityRef<PHIEUXL> _PHIEUXL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUXLChanging(string value);
    partial void OnMAPHIEUXLChanged();
    partial void OnMATBChanging(string value);
    partial void OnMATBChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    partial void OnHUONGXLChanging(string value);
    partial void OnHUONGXLChanged();
    partial void OnMUCDENBUChanging(System.Nullable<double> value);
    partial void OnMUCDENBUChanged();
    #endregion
		
		public CTPHEUXL()
		{
			this._THIETBI = default(EntityRef<THIETBI>);
			this._PHIEUXL = default(EntityRef<PHIEUXL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUXL", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUXL
		{
			get
			{
				return this._MAPHIEUXL;
			}
			set
			{
				if ((this._MAPHIEUXL != value))
				{
					if (this._PHIEUXL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUXLChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUXL = value;
					this.SendPropertyChanged("MAPHIEUXL");
					this.OnMAPHIEUXLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATBChanging(value);
					this.SendPropertyChanging();
					this._MATB = value;
					this.SendPropertyChanged("MATB");
					this.OnMATBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(30)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HUONGXL", DbType="NVarChar(40)")]
		public string HUONGXL
		{
			get
			{
				return this._HUONGXL;
			}
			set
			{
				if ((this._HUONGXL != value))
				{
					this.OnHUONGXLChanging(value);
					this.SendPropertyChanging();
					this._HUONGXL = value;
					this.SendPropertyChanged("HUONGXL");
					this.OnHUONGXLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MUCDENBU", DbType="Float")]
		public System.Nullable<double> MUCDENBU
		{
			get
			{
				return this._MUCDENBU;
			}
			set
			{
				if ((this._MUCDENBU != value))
				{
					this.OnMUCDENBUChanging(value);
					this.SendPropertyChanging();
					this._MUCDENBU = value;
					this.SendPropertyChanged("MUCDENBU");
					this.OnMUCDENBUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTPHEUXL", Storage="_THIETBI", ThisKey="MATB", OtherKey="MATB", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CTPHEUXLs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CTPHEUXLs.Add(this);
						this._MATB = value.MATB;
					}
					else
					{
						this._MATB = default(string);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUXL_CTPHEUXL", Storage="_PHIEUXL", ThisKey="MAPHIEUXL", OtherKey="MAPHIEUXL", IsForeignKey=true)]
		public PHIEUXL PHIEUXL
		{
			get
			{
				return this._PHIEUXL.Entity;
			}
			set
			{
				PHIEUXL previousValue = this._PHIEUXL.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUXL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUXL.Entity = null;
						previousValue.CTPHEUXLs.Remove(this);
					}
					this._PHIEUXL.Entity = value;
					if ((value != null))
					{
						value.CTPHEUXLs.Add(this);
						this._MAPHIEUXL = value.MAPHIEUXL;
					}
					else
					{
						this._MAPHIEUXL = default(string);
					}
					this.SendPropertyChanged("PHIEUXL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPHIEUDAT")]
	public partial class CTPHIEUDAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATB;
		
		private string _MAPHIEUDAT;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<THIETBI> _THIETBI;
		
		private EntityRef<PHIEUDAT> _PHIEUDAT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATBChanging(string value);
    partial void OnMATBChanged();
    partial void OnMAPHIEUDATChanging(string value);
    partial void OnMAPHIEUDATChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public CTPHIEUDAT()
		{
			this._THIETBI = default(EntityRef<THIETBI>);
			this._PHIEUDAT = default(EntityRef<PHIEUDAT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATBChanging(value);
					this.SendPropertyChanging();
					this._MATB = value;
					this.SendPropertyChanged("MATB");
					this.OnMATBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUDAT", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUDAT
		{
			get
			{
				return this._MAPHIEUDAT;
			}
			set
			{
				if ((this._MAPHIEUDAT != value))
				{
					if (this._PHIEUDAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUDATChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUDAT = value;
					this.SendPropertyChanged("MAPHIEUDAT");
					this.OnMAPHIEUDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTPHIEUDAT", Storage="_THIETBI", ThisKey="MATB", OtherKey="MATB", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CTPHIEUDATs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUDATs.Add(this);
						this._MATB = value.MATB;
					}
					else
					{
						this._MATB = default(string);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDAT_CTPHIEUDAT", Storage="_PHIEUDAT", ThisKey="MAPHIEUDAT", OtherKey="MAPHIEUDAT", IsForeignKey=true)]
		public PHIEUDAT PHIEUDAT
		{
			get
			{
				return this._PHIEUDAT.Entity;
			}
			set
			{
				PHIEUDAT previousValue = this._PHIEUDAT.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUDAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUDAT.Entity = null;
						previousValue.CTPHIEUDATs.Remove(this);
					}
					this._PHIEUDAT.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUDATs.Add(this);
						this._MAPHIEUDAT = value.MAPHIEUDAT;
					}
					else
					{
						this._MAPHIEUDAT = default(string);
					}
					this.SendPropertyChanged("PHIEUDAT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPHIEUHH")]
	public partial class CTPHIEUHH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_PHIEUGNHH;
		
		private string _MATB;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _GHICHU;
		
		private EntityRef<THIETBI> _THIETBI;
		
		private EntityRef<PHIEUGHINHANHUHONG> _PHIEUGHINHANHUHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PHIEUGNHHChanging(string value);
    partial void OnID_PHIEUGNHHChanged();
    partial void OnMATBChanging(string value);
    partial void OnMATBChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    #endregion
		
		public CTPHIEUHH()
		{
			this._THIETBI = default(EntityRef<THIETBI>);
			this._PHIEUGHINHANHUHONG = default(EntityRef<PHIEUGHINHANHUHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHIEUGNHH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_PHIEUGNHH
		{
			get
			{
				return this._ID_PHIEUGNHH;
			}
			set
			{
				if ((this._ID_PHIEUGNHH != value))
				{
					if (this._PHIEUGHINHANHUHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PHIEUGNHHChanging(value);
					this.SendPropertyChanging();
					this._ID_PHIEUGNHH = value;
					this.SendPropertyChanged("ID_PHIEUGNHH");
					this.OnID_PHIEUGNHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATBChanging(value);
					this.SendPropertyChanging();
					this._MATB = value;
					this.SendPropertyChanged("MATB");
					this.OnMATBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(100)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTPHIEUHH", Storage="_THIETBI", ThisKey="MATB", OtherKey="MATB", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CTPHIEUHHs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUHHs.Add(this);
						this._MATB = value.MATB;
					}
					else
					{
						this._MATB = default(string);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUGHINHANHUHONG_CTPHIEUHH", Storage="_PHIEUGHINHANHUHONG", ThisKey="ID_PHIEUGNHH", OtherKey="ID_PHIEUGNHH", IsForeignKey=true)]
		public PHIEUGHINHANHUHONG PHIEUGHINHANHUHONG
		{
			get
			{
				return this._PHIEUGHINHANHUHONG.Entity;
			}
			set
			{
				PHIEUGHINHANHUHONG previousValue = this._PHIEUGHINHANHUHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUGHINHANHUHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUGHINHANHUHONG.Entity = null;
						previousValue.CTPHIEUHHs.Remove(this);
					}
					this._PHIEUGHINHANHUHONG.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUHHs.Add(this);
						this._ID_PHIEUGNHH = value.ID_PHIEUGNHH;
					}
					else
					{
						this._ID_PHIEUGNHH = default(string);
					}
					this.SendPropertyChanged("PHIEUGHINHANHUHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPHIEUNGHIEMTHU")]
	public partial class CTPHIEUNGHIEMTHU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATB;
		
		private string _MAPHIEUNGHIEMTHU;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _TINHTRANG;
		
		private EntityRef<THIETBI> _THIETBI;
		
		private EntityRef<PHIEUNGHIEMTHU> _PHIEUNGHIEMTHU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATBChanging(string value);
    partial void OnMATBChanged();
    partial void OnMAPHIEUNGHIEMTHUChanging(string value);
    partial void OnMAPHIEUNGHIEMTHUChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public CTPHIEUNGHIEMTHU()
		{
			this._THIETBI = default(EntityRef<THIETBI>);
			this._PHIEUNGHIEMTHU = default(EntityRef<PHIEUNGHIEMTHU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATBChanging(value);
					this.SendPropertyChanging();
					this._MATB = value;
					this.SendPropertyChanged("MATB");
					this.OnMATBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUNGHIEMTHU", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUNGHIEMTHU
		{
			get
			{
				return this._MAPHIEUNGHIEMTHU;
			}
			set
			{
				if ((this._MAPHIEUNGHIEMTHU != value))
				{
					if (this._PHIEUNGHIEMTHU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUNGHIEMTHUChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUNGHIEMTHU = value;
					this.SendPropertyChanged("MAPHIEUNGHIEMTHU");
					this.OnMAPHIEUNGHIEMTHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(30)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTPHIEUNGHIEMTHU", Storage="_THIETBI", ThisKey="MATB", OtherKey="MATB", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CTPHIEUNGHIEMTHUs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUNGHIEMTHUs.Add(this);
						this._MATB = value.MATB;
					}
					else
					{
						this._MATB = default(string);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNGHIEMTHU_CTPHIEUNGHIEMTHU", Storage="_PHIEUNGHIEMTHU", ThisKey="MAPHIEUNGHIEMTHU", OtherKey="MAPHIEUNGHIEMTHU", IsForeignKey=true)]
		public PHIEUNGHIEMTHU PHIEUNGHIEMTHU
		{
			get
			{
				return this._PHIEUNGHIEMTHU.Entity;
			}
			set
			{
				PHIEUNGHIEMTHU previousValue = this._PHIEUNGHIEMTHU.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNGHIEMTHU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNGHIEMTHU.Entity = null;
						previousValue.CTPHIEUNGHIEMTHUs.Remove(this);
					}
					this._PHIEUNGHIEMTHU.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUNGHIEMTHUs.Add(this);
						this._MAPHIEUNGHIEMTHU = value.MAPHIEUNGHIEMTHU;
					}
					else
					{
						this._MAPHIEUNGHIEMTHU = default(string);
					}
					this.SendPropertyChanged("PHIEUNGHIEMTHU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPHIEUNHAP")]
	public partial class CTPHIEUNHAP
	{
		
		private string _MAPHIEUNHAP;
		
		private string _MATB;
		
		private System.Nullable<int> _soluong;
		
		public CTPHIEUNHAP()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUNHAP", DbType="VarChar(20)")]
		public string MAPHIEUNHAP
		{
			get
			{
				return this._MAPHIEUNHAP;
			}
			set
			{
				if ((this._MAPHIEUNHAP != value))
				{
					this._MAPHIEUNHAP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="VarChar(10)")]
		public string MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					this._MATB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int")]
		public System.Nullable<int> soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this._soluong = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPHIEUTRA")]
	public partial class CTPHIEUTRA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEUTRA;
		
		private string _MATB;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _TINHTRANG;
		
		private EntityRef<THIETBI> _THIETBI;
		
		private EntityRef<PHIEUTRA> _PHIEUTRA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUTRAChanging(string value);
    partial void OnMAPHIEUTRAChanged();
    partial void OnMATBChanging(string value);
    partial void OnMATBChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public CTPHIEUTRA()
		{
			this._THIETBI = default(EntityRef<THIETBI>);
			this._PHIEUTRA = default(EntityRef<PHIEUTRA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUTRA", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUTRA
		{
			get
			{
				return this._MAPHIEUTRA;
			}
			set
			{
				if ((this._MAPHIEUTRA != value))
				{
					if (this._PHIEUTRA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUTRAChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUTRA = value;
					this.SendPropertyChanged("MAPHIEUTRA");
					this.OnMAPHIEUTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATBChanging(value);
					this.SendPropertyChanging();
					this._MATB = value;
					this.SendPropertyChanged("MATB");
					this.OnMATBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTPHIEUTRA", Storage="_THIETBI", ThisKey="MATB", OtherKey="MATB", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CTPHIEUTRAs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUTRAs.Add(this);
						this._MATB = value.MATB;
					}
					else
					{
						this._MATB = default(string);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUTRA_CTPHIEUTRA", Storage="_PHIEUTRA", ThisKey="MAPHIEUTRA", OtherKey="MAPHIEUTRA", IsForeignKey=true)]
		public PHIEUTRA PHIEUTRA
		{
			get
			{
				return this._PHIEUTRA.Entity;
			}
			set
			{
				PHIEUTRA previousValue = this._PHIEUTRA.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUTRA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUTRA.Entity = null;
						previousValue.CTPHIEUTRAs.Remove(this);
					}
					this._PHIEUTRA.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUTRAs.Add(this);
						this._MAPHIEUTRA = value.MAPHIEUTRA;
					}
					else
					{
						this._MAPHIEUTRA = default(string);
					}
					this.SendPropertyChanged("PHIEUTRA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTTHANHLY")]
	public partial class CTTHANHLY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEU;
		
		private string _MATB;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _TINHTRANG;
		
		private string _HUONGTHANHLY;
		
		private System.Nullable<double> _TIENTHANHLY;
		
		private EntityRef<THIETBI> _THIETBI;
		
		private EntityRef<PHIEUTHANHLY> _PHIEUTHANHLY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUChanging(string value);
    partial void OnMAPHIEUChanged();
    partial void OnMATBChanging(string value);
    partial void OnMATBChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    partial void OnHUONGTHANHLYChanging(string value);
    partial void OnHUONGTHANHLYChanged();
    partial void OnTIENTHANHLYChanging(System.Nullable<double> value);
    partial void OnTIENTHANHLYChanged();
    #endregion
		
		public CTTHANHLY()
		{
			this._THIETBI = default(EntityRef<THIETBI>);
			this._PHIEUTHANHLY = default(EntityRef<PHIEUTHANHLY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEU", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEU
		{
			get
			{
				return this._MAPHIEU;
			}
			set
			{
				if ((this._MAPHIEU != value))
				{
					if (this._PHIEUTHANHLY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEU = value;
					this.SendPropertyChanged("MAPHIEU");
					this.OnMAPHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATBChanging(value);
					this.SendPropertyChanging();
					this._MATB = value;
					this.SendPropertyChanged("MATB");
					this.OnMATBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(30)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HUONGTHANHLY", DbType="NVarChar(50)")]
		public string HUONGTHANHLY
		{
			get
			{
				return this._HUONGTHANHLY;
			}
			set
			{
				if ((this._HUONGTHANHLY != value))
				{
					this.OnHUONGTHANHLYChanging(value);
					this.SendPropertyChanging();
					this._HUONGTHANHLY = value;
					this.SendPropertyChanged("HUONGTHANHLY");
					this.OnHUONGTHANHLYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIENTHANHLY", DbType="Float")]
		public System.Nullable<double> TIENTHANHLY
		{
			get
			{
				return this._TIENTHANHLY;
			}
			set
			{
				if ((this._TIENTHANHLY != value))
				{
					this.OnTIENTHANHLYChanging(value);
					this.SendPropertyChanging();
					this._TIENTHANHLY = value;
					this.SendPropertyChanged("TIENTHANHLY");
					this.OnTIENTHANHLYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTTHANHLY", Storage="_THIETBI", ThisKey="MATB", OtherKey="MATB", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CTTHANHLies.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CTTHANHLies.Add(this);
						this._MATB = value.MATB;
					}
					else
					{
						this._MATB = default(string);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUTHANHLY_CTTHANHLY", Storage="_PHIEUTHANHLY", ThisKey="MAPHIEU", OtherKey="MAPHIEU", IsForeignKey=true)]
		public PHIEUTHANHLY PHIEUTHANHLY
		{
			get
			{
				return this._PHIEUTHANHLY.Entity;
			}
			set
			{
				PHIEUTHANHLY previousValue = this._PHIEUTHANHLY.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUTHANHLY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUTHANHLY.Entity = null;
						previousValue.CTTHANHLies.Remove(this);
					}
					this._PHIEUTHANHLY.Entity = value;
					if ((value != null))
					{
						value.CTTHANHLies.Add(this);
						this._MAPHIEU = value.MAPHIEU;
					}
					else
					{
						this._MAPHIEU = default(string);
					}
					this.SendPropertyChanged("PHIEUTHANHLY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTTHIETBITHEOLOP")]
	public partial class CTTHIETBITHEOLOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEUDSTHIETBI;
		
		private string _MATB;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<THIETBI> _THIETBI;
		
		private EntityRef<PHIEUDSTHIETBITHEOLOP> _PHIEUDSTHIETBITHEOLOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUDSTHIETBIChanging(string value);
    partial void OnMAPHIEUDSTHIETBIChanged();
    partial void OnMATBChanging(string value);
    partial void OnMATBChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public CTTHIETBITHEOLOP()
		{
			this._THIETBI = default(EntityRef<THIETBI>);
			this._PHIEUDSTHIETBITHEOLOP = default(EntityRef<PHIEUDSTHIETBITHEOLOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUDSTHIETBI", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUDSTHIETBI
		{
			get
			{
				return this._MAPHIEUDSTHIETBI;
			}
			set
			{
				if ((this._MAPHIEUDSTHIETBI != value))
				{
					if (this._PHIEUDSTHIETBITHEOLOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUDSTHIETBIChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUDSTHIETBI = value;
					this.SendPropertyChanged("MAPHIEUDSTHIETBI");
					this.OnMAPHIEUDSTHIETBIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATBChanging(value);
					this.SendPropertyChanging();
					this._MATB = value;
					this.SendPropertyChanged("MATB");
					this.OnMATBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTTHIETBITHEOLOP", Storage="_THIETBI", ThisKey="MATB", OtherKey="MATB", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CTTHIETBITHEOLOPs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CTTHIETBITHEOLOPs.Add(this);
						this._MATB = value.MATB;
					}
					else
					{
						this._MATB = default(string);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDSTHIETBITHEOLOP_CTTHIETBITHEOLOP", Storage="_PHIEUDSTHIETBITHEOLOP", ThisKey="MAPHIEUDSTHIETBI", OtherKey="MAPHIEUDSTHIETBI", IsForeignKey=true)]
		public PHIEUDSTHIETBITHEOLOP PHIEUDSTHIETBITHEOLOP
		{
			get
			{
				return this._PHIEUDSTHIETBITHEOLOP.Entity;
			}
			set
			{
				PHIEUDSTHIETBITHEOLOP previousValue = this._PHIEUDSTHIETBITHEOLOP.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUDSTHIETBITHEOLOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUDSTHIETBITHEOLOP.Entity = null;
						previousValue.CTTHIETBITHEOLOPs.Remove(this);
					}
					this._PHIEUDSTHIETBITHEOLOP.Entity = value;
					if ((value != null))
					{
						value.CTTHIETBITHEOLOPs.Add(this);
						this._MAPHIEUDSTHIETBI = value.MAPHIEUDSTHIETBI;
					}
					else
					{
						this._MAPHIEUDSTHIETBI = default(string);
					}
					this.SendPropertyChanged("PHIEUDSTHIETBITHEOLOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIAOVIEN")]
	public partial class GIAOVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAGV;
		
		private string _TEN;
		
		private string _EMAIL;
		
		private string _SDT;
		
		private string _GT;
		
		private string _DIACHI;
		
		private string _PASSWORD;
		
		private EntitySet<CTDAY> _CTDAYs;
		
		private EntitySet<PHIEUMUON> _PHIEUMUONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAGVChanging(string value);
    partial void OnMAGVChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnGTChanging(string value);
    partial void OnGTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    #endregion
		
		public GIAOVIEN()
		{
			this._CTDAYs = new EntitySet<CTDAY>(new Action<CTDAY>(this.attach_CTDAYs), new Action<CTDAY>(this.detach_CTDAYs));
			this._PHIEUMUONs = new EntitySet<PHIEUMUON>(new Action<PHIEUMUON>(this.attach_PHIEUMUONs), new Action<PHIEUMUON>(this.detach_PHIEUMUONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGV", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGV
		{
			get
			{
				return this._MAGV;
			}
			set
			{
				if ((this._MAGV != value))
				{
					this.OnMAGVChanging(value);
					this.SendPropertyChanging();
					this._MAGV = value;
					this.SendPropertyChanged("MAGV");
					this.OnMAGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(40)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(40)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GT", DbType="NVarChar(10)")]
		public string GT
		{
			get
			{
				return this._GT;
			}
			set
			{
				if ((this._GT != value))
				{
					this.OnGTChanging(value);
					this.SendPropertyChanging();
					this._GT = value;
					this.SendPropertyChanged("GT");
					this.OnGTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(60)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(20)")]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_CTDAY", Storage="_CTDAYs", ThisKey="MAGV", OtherKey="MAGV")]
		public EntitySet<CTDAY> CTDAYs
		{
			get
			{
				return this._CTDAYs;
			}
			set
			{
				this._CTDAYs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_PHIEUMUON", Storage="_PHIEUMUONs", ThisKey="MAGV", OtherKey="MAGV")]
		public EntitySet<PHIEUMUON> PHIEUMUONs
		{
			get
			{
				return this._PHIEUMUONs;
			}
			set
			{
				this._PHIEUMUONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDAYs(CTDAY entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = this;
		}
		
		private void detach_CTDAYs(CTDAY entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = null;
		}
		
		private void attach_PHIEUMUONs(PHIEUMUON entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = this;
		}
		
		private void detach_PHIEUMUONs(PHIEUMUON entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCSINH")]
	public partial class HOCSINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_HOCSINH;
		
		private string _MALOP;
		
		private string _TEN;
		
		private string _GIOITINH;
		
		private EntityRef<LOP> _LOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HOCSINHChanging(string value);
    partial void OnID_HOCSINHChanged();
    partial void OnMALOPChanging(string value);
    partial void OnMALOPChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    #endregion
		
		public HOCSINH()
		{
			this._LOP = default(EntityRef<LOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HOCSINH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_HOCSINH
		{
			get
			{
				return this._ID_HOCSINH;
			}
			set
			{
				if ((this._ID_HOCSINH != value))
				{
					this.OnID_HOCSINHChanging(value);
					this.SendPropertyChanging();
					this._ID_HOCSINH = value;
					this.SendPropertyChanged("ID_HOCSINH");
					this.OnID_HOCSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="VarChar(15)")]
		public string MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(40)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(10)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOCSINH", Storage="_LOP", ThisKey="MALOP", OtherKey="MALOP", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.HOCSINHs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.HOCSINHs.Add(this);
						this._MALOP = value.MALOP;
					}
					else
					{
						this._MALOP = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOILOP")]
	public partial class KHOILOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_KHOI;
		
		private string _TENKHOI;
		
		private EntitySet<LOP> _LOPs;
		
		private EntitySet<MONHOC> _MONHOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KHOIChanging(string value);
    partial void OnID_KHOIChanged();
    partial void OnTENKHOIChanging(string value);
    partial void OnTENKHOIChanged();
    #endregion
		
		public KHOILOP()
		{
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			this._MONHOCs = new EntitySet<MONHOC>(new Action<MONHOC>(this.attach_MONHOCs), new Action<MONHOC>(this.detach_MONHOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KHOI", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_KHOI
		{
			get
			{
				return this._ID_KHOI;
			}
			set
			{
				if ((this._ID_KHOI != value))
				{
					this.OnID_KHOIChanging(value);
					this.SendPropertyChanging();
					this._ID_KHOI = value;
					this.SendPropertyChanged("ID_KHOI");
					this.OnID_KHOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHOI", DbType="NVarChar(20)")]
		public string TENKHOI
		{
			get
			{
				return this._TENKHOI;
			}
			set
			{
				if ((this._TENKHOI != value))
				{
					this.OnTENKHOIChanging(value);
					this.SendPropertyChanging();
					this._TENKHOI = value;
					this.SendPropertyChanged("TENKHOI");
					this.OnTENKHOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOILOP_LOP", Storage="_LOPs", ThisKey="ID_KHOI", OtherKey="ID_KHOI")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOILOP_MONHOC", Storage="_MONHOCs", ThisKey="ID_KHOI", OtherKey="ID_KHOI")]
		public EntitySet<MONHOC> MONHOCs
		{
			get
			{
				return this._MONHOCs;
			}
			set
			{
				this._MONHOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOILOP = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOILOP = null;
		}
		
		private void attach_MONHOCs(MONHOC entity)
		{
			this.SendPropertyChanging();
			entity.KHOILOP = this;
		}
		
		private void detach_MONHOCs(MONHOC entity)
		{
			this.SendPropertyChanging();
			entity.KHOILOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LICHHOC")]
	public partial class LICHHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_LICH;
		
		private string _MALOP;
		
		private string _MAPHONG;
		
		private string _MABAI;
		
		private string _MAPHIEUDSTHIETBI;
		
		private System.Nullable<System.DateTime> _NGAY;
		
		private System.Nullable<System.DateTime> _GIOBATDAU;
		
		private System.Nullable<System.DateTime> _GIOKETTHUC;
		
		private EntitySet<PHIEUNGHIEMTHU> _PHIEUNGHIEMTHUs;
		
		private EntityRef<BAIHOC> _BAIHOC;
		
		private EntityRef<LOP> _LOP;
		
		private EntityRef<PHIEUDSTHIETBITHEOLOP> _PHIEUDSTHIETBITHEOLOP;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LICHChanging(string value);
    partial void OnID_LICHChanged();
    partial void OnMALOPChanging(string value);
    partial void OnMALOPChanged();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnMABAIChanging(string value);
    partial void OnMABAIChanged();
    partial void OnMAPHIEUDSTHIETBIChanging(string value);
    partial void OnMAPHIEUDSTHIETBIChanged();
    partial void OnNGAYChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYChanged();
    partial void OnGIOBATDAUChanging(System.Nullable<System.DateTime> value);
    partial void OnGIOBATDAUChanged();
    partial void OnGIOKETTHUCChanging(System.Nullable<System.DateTime> value);
    partial void OnGIOKETTHUCChanged();
    #endregion
		
		public LICHHOC()
		{
			this._PHIEUNGHIEMTHUs = new EntitySet<PHIEUNGHIEMTHU>(new Action<PHIEUNGHIEMTHU>(this.attach_PHIEUNGHIEMTHUs), new Action<PHIEUNGHIEMTHU>(this.detach_PHIEUNGHIEMTHUs));
			this._BAIHOC = default(EntityRef<BAIHOC>);
			this._LOP = default(EntityRef<LOP>);
			this._PHIEUDSTHIETBITHEOLOP = default(EntityRef<PHIEUDSTHIETBITHEOLOP>);
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LICH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_LICH
		{
			get
			{
				return this._ID_LICH;
			}
			set
			{
				if ((this._ID_LICH != value))
				{
					this.OnID_LICHChanging(value);
					this.SendPropertyChanging();
					this._ID_LICH = value;
					this.SendPropertyChanged("ID_LICH");
					this.OnID_LICHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="VarChar(15)")]
		public string MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="VarChar(10)")]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABAI", DbType="VarChar(15)")]
		public string MABAI
		{
			get
			{
				return this._MABAI;
			}
			set
			{
				if ((this._MABAI != value))
				{
					if (this._BAIHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMABAIChanging(value);
					this.SendPropertyChanging();
					this._MABAI = value;
					this.SendPropertyChanged("MABAI");
					this.OnMABAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUDSTHIETBI", DbType="VarChar(10)")]
		public string MAPHIEUDSTHIETBI
		{
			get
			{
				return this._MAPHIEUDSTHIETBI;
			}
			set
			{
				if ((this._MAPHIEUDSTHIETBI != value))
				{
					if (this._PHIEUDSTHIETBITHEOLOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUDSTHIETBIChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUDSTHIETBI = value;
					this.SendPropertyChanged("MAPHIEUDSTHIETBI");
					this.OnMAPHIEUDSTHIETBIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAY
		{
			get
			{
				return this._NGAY;
			}
			set
			{
				if ((this._NGAY != value))
				{
					this.OnNGAYChanging(value);
					this.SendPropertyChanging();
					this._NGAY = value;
					this.SendPropertyChanged("NGAY");
					this.OnNGAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOBATDAU", DbType="DateTime")]
		public System.Nullable<System.DateTime> GIOBATDAU
		{
			get
			{
				return this._GIOBATDAU;
			}
			set
			{
				if ((this._GIOBATDAU != value))
				{
					this.OnGIOBATDAUChanging(value);
					this.SendPropertyChanging();
					this._GIOBATDAU = value;
					this.SendPropertyChanged("GIOBATDAU");
					this.OnGIOBATDAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOKETTHUC", DbType="DateTime")]
		public System.Nullable<System.DateTime> GIOKETTHUC
		{
			get
			{
				return this._GIOKETTHUC;
			}
			set
			{
				if ((this._GIOKETTHUC != value))
				{
					this.OnGIOKETTHUCChanging(value);
					this.SendPropertyChanging();
					this._GIOKETTHUC = value;
					this.SendPropertyChanged("GIOKETTHUC");
					this.OnGIOKETTHUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LICHHOC_PHIEUNGHIEMTHU", Storage="_PHIEUNGHIEMTHUs", ThisKey="ID_LICH", OtherKey="ID_LICH")]
		public EntitySet<PHIEUNGHIEMTHU> PHIEUNGHIEMTHUs
		{
			get
			{
				return this._PHIEUNGHIEMTHUs;
			}
			set
			{
				this._PHIEUNGHIEMTHUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAIHOC_LICHHOC", Storage="_BAIHOC", ThisKey="MABAI", OtherKey="MABAI", IsForeignKey=true)]
		public BAIHOC BAIHOC
		{
			get
			{
				return this._BAIHOC.Entity;
			}
			set
			{
				BAIHOC previousValue = this._BAIHOC.Entity;
				if (((previousValue != value) 
							|| (this._BAIHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BAIHOC.Entity = null;
						previousValue.LICHHOCs.Remove(this);
					}
					this._BAIHOC.Entity = value;
					if ((value != null))
					{
						value.LICHHOCs.Add(this);
						this._MABAI = value.MABAI;
					}
					else
					{
						this._MABAI = default(string);
					}
					this.SendPropertyChanged("BAIHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_LICHHOC", Storage="_LOP", ThisKey="MALOP", OtherKey="MALOP", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.LICHHOCs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.LICHHOCs.Add(this);
						this._MALOP = value.MALOP;
					}
					else
					{
						this._MALOP = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDSTHIETBITHEOLOP_LICHHOC", Storage="_PHIEUDSTHIETBITHEOLOP", ThisKey="MAPHIEUDSTHIETBI", OtherKey="MAPHIEUDSTHIETBI", IsForeignKey=true)]
		public PHIEUDSTHIETBITHEOLOP PHIEUDSTHIETBITHEOLOP
		{
			get
			{
				return this._PHIEUDSTHIETBITHEOLOP.Entity;
			}
			set
			{
				PHIEUDSTHIETBITHEOLOP previousValue = this._PHIEUDSTHIETBITHEOLOP.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUDSTHIETBITHEOLOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUDSTHIETBITHEOLOP.Entity = null;
						previousValue.LICHHOCs.Remove(this);
					}
					this._PHIEUDSTHIETBITHEOLOP.Entity = value;
					if ((value != null))
					{
						value.LICHHOCs.Add(this);
						this._MAPHIEUDSTHIETBI = value.MAPHIEUDSTHIETBI;
					}
					else
					{
						this._MAPHIEUDSTHIETBI = default(string);
					}
					this.SendPropertyChanged("PHIEUDSTHIETBITHEOLOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_LICHHOC", Storage="_PHONG", ThisKey="MAPHONG", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.LICHHOCs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.LICHHOCs.Add(this);
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MAPHONG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNGHIEMTHUs(PHIEUNGHIEMTHU entity)
		{
			this.SendPropertyChanging();
			entity.LICHHOC = this;
		}
		
		private void detach_PHIEUNGHIEMTHUs(PHIEUNGHIEMTHU entity)
		{
			this.SendPropertyChanging();
			entity.LICHHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIPHONG")]
	public partial class LOAIPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAIPH;
		
		private string _TENLOAI;
		
		private EntitySet<PHONG> _PHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIPHChanging(string value);
    partial void OnMALOAIPHChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAIPHONG()
		{
			this._PHONGs = new EntitySet<PHONG>(new Action<PHONG>(this.attach_PHONGs), new Action<PHONG>(this.detach_PHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIPH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAIPH
		{
			get
			{
				return this._MALOAIPH;
			}
			set
			{
				if ((this._MALOAIPH != value))
				{
					this.OnMALOAIPHChanging(value);
					this.SendPropertyChanging();
					this._MALOAIPH = value;
					this.SendPropertyChanged("MALOAIPH");
					this.OnMALOAIPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(40)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIPHONG_PHONG", Storage="_PHONGs", ThisKey="MALOAIPH", OtherKey="MALOAIPH")]
		public EntitySet<PHONG> PHONGs
		{
			get
			{
				return this._PHONGs;
			}
			set
			{
				this._PHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIPHONG = this;
		}
		
		private void detach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIPHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAITHIETBI")]
	public partial class LOAITHIETBI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAI;
		
		private string _TENLOAI;
		
		private EntitySet<THIETBI> _THIETBIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAITHIETBI()
		{
			this._THIETBIs = new EntitySet<THIETBI>(new Action<THIETBI>(this.attach_THIETBIs), new Action<THIETBI>(this.detach_THIETBIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(40)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITHIETBI_THIETBI", Storage="_THIETBIs", ThisKey="MALOAI", OtherKey="MALOAI")]
		public EntitySet<THIETBI> THIETBIs
		{
			get
			{
				return this._THIETBIs;
			}
			set
			{
				this._THIETBIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.LOAITHIETBI = this;
		}
		
		private void detach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.LOAITHIETBI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOP")]
	public partial class LOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOP;
		
		private string _TENLOP;
		
		private System.Nullable<int> _SISO;
		
		private string _ID_KHOI;
		
		private EntitySet<HOCSINH> _HOCSINHs;
		
		private EntitySet<LICHHOC> _LICHHOCs;
		
		private EntitySet<PHIEUDSTHIETBITHEOLOP> _PHIEUDSTHIETBITHEOLOPs;
		
		private EntityRef<KHOILOP> _KHOILOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOPChanging(string value);
    partial void OnMALOPChanged();
    partial void OnTENLOPChanging(string value);
    partial void OnTENLOPChanged();
    partial void OnSISOChanging(System.Nullable<int> value);
    partial void OnSISOChanged();
    partial void OnID_KHOIChanging(string value);
    partial void OnID_KHOIChanged();
    #endregion
		
		public LOP()
		{
			this._HOCSINHs = new EntitySet<HOCSINH>(new Action<HOCSINH>(this.attach_HOCSINHs), new Action<HOCSINH>(this.detach_HOCSINHs));
			this._LICHHOCs = new EntitySet<LICHHOC>(new Action<LICHHOC>(this.attach_LICHHOCs), new Action<LICHHOC>(this.detach_LICHHOCs));
			this._PHIEUDSTHIETBITHEOLOPs = new EntitySet<PHIEUDSTHIETBITHEOLOP>(new Action<PHIEUDSTHIETBITHEOLOP>(this.attach_PHIEUDSTHIETBITHEOLOPs), new Action<PHIEUDSTHIETBITHEOLOP>(this.detach_PHIEUDSTHIETBITHEOLOPs));
			this._KHOILOP = default(EntityRef<KHOILOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOP", DbType="NVarChar(20)")]
		public string TENLOP
		{
			get
			{
				return this._TENLOP;
			}
			set
			{
				if ((this._TENLOP != value))
				{
					this.OnTENLOPChanging(value);
					this.SendPropertyChanging();
					this._TENLOP = value;
					this.SendPropertyChanged("TENLOP");
					this.OnTENLOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SISO", DbType="Int")]
		public System.Nullable<int> SISO
		{
			get
			{
				return this._SISO;
			}
			set
			{
				if ((this._SISO != value))
				{
					this.OnSISOChanging(value);
					this.SendPropertyChanging();
					this._SISO = value;
					this.SendPropertyChanged("SISO");
					this.OnSISOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KHOI", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ID_KHOI
		{
			get
			{
				return this._ID_KHOI;
			}
			set
			{
				if ((this._ID_KHOI != value))
				{
					if (this._KHOILOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHOIChanging(value);
					this.SendPropertyChanging();
					this._ID_KHOI = value;
					this.SendPropertyChanged("ID_KHOI");
					this.OnID_KHOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOCSINH", Storage="_HOCSINHs", ThisKey="MALOP", OtherKey="MALOP")]
		public EntitySet<HOCSINH> HOCSINHs
		{
			get
			{
				return this._HOCSINHs;
			}
			set
			{
				this._HOCSINHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_LICHHOC", Storage="_LICHHOCs", ThisKey="MALOP", OtherKey="MALOP")]
		public EntitySet<LICHHOC> LICHHOCs
		{
			get
			{
				return this._LICHHOCs;
			}
			set
			{
				this._LICHHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_PHIEUDSTHIETBITHEOLOP", Storage="_PHIEUDSTHIETBITHEOLOPs", ThisKey="MALOP", OtherKey="MALOP")]
		public EntitySet<PHIEUDSTHIETBITHEOLOP> PHIEUDSTHIETBITHEOLOPs
		{
			get
			{
				return this._PHIEUDSTHIETBITHEOLOPs;
			}
			set
			{
				this._PHIEUDSTHIETBITHEOLOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOILOP_LOP", Storage="_KHOILOP", ThisKey="ID_KHOI", OtherKey="ID_KHOI", IsForeignKey=true)]
		public KHOILOP KHOILOP
		{
			get
			{
				return this._KHOILOP.Entity;
			}
			set
			{
				KHOILOP previousValue = this._KHOILOP.Entity;
				if (((previousValue != value) 
							|| (this._KHOILOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOILOP.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._KHOILOP.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._ID_KHOI = value.ID_KHOI;
					}
					else
					{
						this._ID_KHOI = default(string);
					}
					this.SendPropertyChanged("KHOILOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOCSINHs(HOCSINH entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_HOCSINHs(HOCSINH entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
		
		private void attach_LICHHOCs(LICHHOC entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_LICHHOCs(LICHHOC entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
		
		private void attach_PHIEUDSTHIETBITHEOLOPs(PHIEUDSTHIETBITHEOLOP entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_PHIEUDSTHIETBITHEOLOPs(PHIEUDSTHIETBITHEOLOP entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONHOC")]
	public partial class MONHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAMON;
		
		private string _ID_KHOI;
		
		private string _TENMON;
		
		private EntitySet<BAIHOC> _BAIHOCs;
		
		private EntitySet<CTDAY> _CTDAYs;
		
		private EntityRef<KHOILOP> _KHOILOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnID_KHOIChanging(string value);
    partial void OnID_KHOIChanged();
    partial void OnTENMONChanging(string value);
    partial void OnTENMONChanged();
    #endregion
		
		public MONHOC()
		{
			this._BAIHOCs = new EntitySet<BAIHOC>(new Action<BAIHOC>(this.attach_BAIHOCs), new Action<BAIHOC>(this.detach_BAIHOCs));
			this._CTDAYs = new EntitySet<CTDAY>(new Action<CTDAY>(this.attach_CTDAYs), new Action<CTDAY>(this.detach_CTDAYs));
			this._KHOILOP = default(EntityRef<KHOILOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KHOI", DbType="VarChar(10)")]
		public string ID_KHOI
		{
			get
			{
				return this._ID_KHOI;
			}
			set
			{
				if ((this._ID_KHOI != value))
				{
					if (this._KHOILOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHOIChanging(value);
					this.SendPropertyChanging();
					this._ID_KHOI = value;
					this.SendPropertyChanged("ID_KHOI");
					this.OnID_KHOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMON", DbType="NVarChar(30)")]
		public string TENMON
		{
			get
			{
				return this._TENMON;
			}
			set
			{
				if ((this._TENMON != value))
				{
					this.OnTENMONChanging(value);
					this.SendPropertyChanging();
					this._TENMON = value;
					this.SendPropertyChanged("TENMON");
					this.OnTENMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_BAIHOC", Storage="_BAIHOCs", ThisKey="MAMON", OtherKey="MAMON")]
		public EntitySet<BAIHOC> BAIHOCs
		{
			get
			{
				return this._BAIHOCs;
			}
			set
			{
				this._BAIHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_CTDAY", Storage="_CTDAYs", ThisKey="MAMON", OtherKey="MAMON")]
		public EntitySet<CTDAY> CTDAYs
		{
			get
			{
				return this._CTDAYs;
			}
			set
			{
				this._CTDAYs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOILOP_MONHOC", Storage="_KHOILOP", ThisKey="ID_KHOI", OtherKey="ID_KHOI", IsForeignKey=true)]
		public KHOILOP KHOILOP
		{
			get
			{
				return this._KHOILOP.Entity;
			}
			set
			{
				KHOILOP previousValue = this._KHOILOP.Entity;
				if (((previousValue != value) 
							|| (this._KHOILOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOILOP.Entity = null;
						previousValue.MONHOCs.Remove(this);
					}
					this._KHOILOP.Entity = value;
					if ((value != null))
					{
						value.MONHOCs.Add(this);
						this._ID_KHOI = value.ID_KHOI;
					}
					else
					{
						this._ID_KHOI = default(string);
					}
					this.SendPropertyChanged("KHOILOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BAIHOCs(BAIHOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_BAIHOCs(BAIHOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
		
		private void attach_CTDAYs(CTDAY entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_CTDAYs(CTDAY entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANCC;
		
		private string _TENNCC;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private string _EMAIL;
		
		private EntitySet<PHIEUDAT> _PHIEUDATs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnTENNCCChanging(string value);
    partial void OnTENNCCChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._PHIEUDATs = new EntitySet<PHIEUDAT>(new Action<PHIEUDAT>(this.attach_PHIEUDATs), new Action<PHIEUDAT>(this.detach_PHIEUDATs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNCC", DbType="NVarChar(100)")]
		public string TENNCC
		{
			get
			{
				return this._TENNCC;
			}
			set
			{
				if ((this._TENNCC != value))
				{
					this.OnTENNCCChanging(value);
					this.SendPropertyChanging();
					this._TENNCC = value;
					this.SendPropertyChanged("TENNCC");
					this.OnTENNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(60)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(20)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUDAT", Storage="_PHIEUDATs", ThisKey="MANCC", OtherKey="MANCC")]
		public EntitySet<PHIEUDAT> PHIEUDATs
		{
			get
			{
				return this._PHIEUDATs;
			}
			set
			{
				this._PHIEUDATs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUDATs(PHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_PHIEUDATs(PHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _TENNV;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private string _EMAIL;
		
		private string _MATKHAU;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private string _QUYEN;
		
		private EntitySet<PHIEUDAT> _PHIEUDATs;
		
		private EntitySet<PHIEUDSTHIETBITHEOLOP> _PHIEUDSTHIETBITHEOLOPs;
		
		private EntitySet<PHIEUGHINHANHUHONG> _PHIEUGHINHANHUHONGs;
		
		private EntitySet<PHIEUNGHIEMTHU> _PHIEUNGHIEMTHUs;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntitySet<PHIEUTHANHLY> _PHIEUTHANHLies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTENNVChanging(string value);
    partial void OnTENNVChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    partial void OnQUYENChanging(string value);
    partial void OnQUYENChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._PHIEUDATs = new EntitySet<PHIEUDAT>(new Action<PHIEUDAT>(this.attach_PHIEUDATs), new Action<PHIEUDAT>(this.detach_PHIEUDATs));
			this._PHIEUDSTHIETBITHEOLOPs = new EntitySet<PHIEUDSTHIETBITHEOLOP>(new Action<PHIEUDSTHIETBITHEOLOP>(this.attach_PHIEUDSTHIETBITHEOLOPs), new Action<PHIEUDSTHIETBITHEOLOP>(this.detach_PHIEUDSTHIETBITHEOLOPs));
			this._PHIEUGHINHANHUHONGs = new EntitySet<PHIEUGHINHANHUHONG>(new Action<PHIEUGHINHANHUHONG>(this.attach_PHIEUGHINHANHUHONGs), new Action<PHIEUGHINHANHUHONG>(this.detach_PHIEUGHINHANHUHONGs));
			this._PHIEUNGHIEMTHUs = new EntitySet<PHIEUNGHIEMTHU>(new Action<PHIEUNGHIEMTHU>(this.attach_PHIEUNGHIEMTHUs), new Action<PHIEUNGHIEMTHU>(this.detach_PHIEUNGHIEMTHUs));
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._PHIEUTHANHLies = new EntitySet<PHIEUTHANHLY>(new Action<PHIEUTHANHLY>(this.attach_PHIEUTHANHLies), new Action<PHIEUTHANHLY>(this.detach_PHIEUTHANHLies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNV", DbType="NVarChar(30)")]
		public string TENNV
		{
			get
			{
				return this._TENNV;
			}
			set
			{
				if ((this._TENNV != value))
				{
					this.OnTENNVChanging(value);
					this.SendPropertyChanging();
					this._TENNV = value;
					this.SendPropertyChanged("TENNV");
					this.OnTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(60)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(20)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(15)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUYEN", DbType="NVarChar(20)")]
		public string QUYEN
		{
			get
			{
				return this._QUYEN;
			}
			set
			{
				if ((this._QUYEN != value))
				{
					this.OnQUYENChanging(value);
					this.SendPropertyChanging();
					this._QUYEN = value;
					this.SendPropertyChanged("QUYEN");
					this.OnQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUDAT", Storage="_PHIEUDATs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<PHIEUDAT> PHIEUDATs
		{
			get
			{
				return this._PHIEUDATs;
			}
			set
			{
				this._PHIEUDATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUDSTHIETBITHEOLOP", Storage="_PHIEUDSTHIETBITHEOLOPs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<PHIEUDSTHIETBITHEOLOP> PHIEUDSTHIETBITHEOLOPs
		{
			get
			{
				return this._PHIEUDSTHIETBITHEOLOPs;
			}
			set
			{
				this._PHIEUDSTHIETBITHEOLOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUGHINHANHUHONG", Storage="_PHIEUGHINHANHUHONGs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<PHIEUGHINHANHUHONG> PHIEUGHINHANHUHONGs
		{
			get
			{
				return this._PHIEUGHINHANHUHONGs;
			}
			set
			{
				this._PHIEUGHINHANHUHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNGHIEMTHU", Storage="_PHIEUNGHIEMTHUs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<PHIEUNGHIEMTHU> PHIEUNGHIEMTHUs
		{
			get
			{
				return this._PHIEUNGHIEMTHUs;
			}
			set
			{
				this._PHIEUNGHIEMTHUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUTHANHLY", Storage="_PHIEUTHANHLies", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<PHIEUTHANHLY> PHIEUTHANHLies
		{
			get
			{
				return this._PHIEUTHANHLies;
			}
			set
			{
				this._PHIEUTHANHLies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUDATs(PHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUDATs(PHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUDSTHIETBITHEOLOPs(PHIEUDSTHIETBITHEOLOP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUDSTHIETBITHEOLOPs(PHIEUDSTHIETBITHEOLOP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUGHINHANHUHONGs(PHIEUGHINHANHUHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUGHINHANHUHONGs(PHIEUGHINHANHUHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUNGHIEMTHUs(PHIEUNGHIEMTHU entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUNGHIEMTHUs(PHIEUNGHIEMTHU entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUTHANHLies(PHIEUTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUTHANHLies(PHIEUTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUDAT")]
	public partial class PHIEUDAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEUDAT;
		
		private string _MANV;
		
		private string _MANCC;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private EntitySet<CTPHIEUDAT> _CTPHIEUDATs;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUDATChanging(string value);
    partial void OnMAPHIEUDATChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    #endregion
		
		public PHIEUDAT()
		{
			this._CTPHIEUDATs = new EntitySet<CTPHIEUDAT>(new Action<CTPHIEUDAT>(this.attach_CTPHIEUDATs), new Action<CTPHIEUDAT>(this.detach_CTPHIEUDATs));
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUDAT", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUDAT
		{
			get
			{
				return this._MAPHIEUDAT;
			}
			set
			{
				if ((this._MAPHIEUDAT != value))
				{
					this.OnMAPHIEUDATChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUDAT = value;
					this.SendPropertyChanged("MAPHIEUDAT");
					this.OnMAPHIEUDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(15)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="VarChar(15)")]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDAT_CTPHIEUDAT", Storage="_CTPHIEUDATs", ThisKey="MAPHIEUDAT", OtherKey="MAPHIEUDAT")]
		public EntitySet<CTPHIEUDAT> CTPHIEUDATs
		{
			get
			{
				return this._CTPHIEUDATs;
			}
			set
			{
				this._CTPHIEUDATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDAT_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="MAPHIEUDAT", OtherKey="MAPHIEUDAT")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUDAT", Storage="_NHACUNGCAP", ThisKey="MANCC", OtherKey="MANCC", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.PHIEUDATs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.PHIEUDATs.Add(this);
						this._MANCC = value.MANCC;
					}
					else
					{
						this._MANCC = default(string);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUDAT", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUDATs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUDATs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHIEUDATs(CTPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDAT = this;
		}
		
		private void detach_CTPHIEUDATs(CTPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDAT = null;
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDAT = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDAT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUDSTHIETBITHEOLOP")]
	public partial class PHIEUDSTHIETBITHEOLOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private string _MAPHIEUDSTHIETBI;
		
		private string _MANV;
		
		private string _MABAI;
		
		private string _MALOP;
		
		private EntitySet<CTTHIETBITHEOLOP> _CTTHIETBITHEOLOPs;
		
		private EntitySet<LICHHOC> _LICHHOCs;
		
		private EntityRef<BAIHOC> _BAIHOC;
		
		private EntityRef<LOP> _LOP;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnMAPHIEUDSTHIETBIChanging(string value);
    partial void OnMAPHIEUDSTHIETBIChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMABAIChanging(string value);
    partial void OnMABAIChanged();
    partial void OnMALOPChanging(string value);
    partial void OnMALOPChanged();
    #endregion
		
		public PHIEUDSTHIETBITHEOLOP()
		{
			this._CTTHIETBITHEOLOPs = new EntitySet<CTTHIETBITHEOLOP>(new Action<CTTHIETBITHEOLOP>(this.attach_CTTHIETBITHEOLOPs), new Action<CTTHIETBITHEOLOP>(this.detach_CTTHIETBITHEOLOPs));
			this._LICHHOCs = new EntitySet<LICHHOC>(new Action<LICHHOC>(this.attach_LICHHOCs), new Action<LICHHOC>(this.detach_LICHHOCs));
			this._BAIHOC = default(EntityRef<BAIHOC>);
			this._LOP = default(EntityRef<LOP>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUDSTHIETBI", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUDSTHIETBI
		{
			get
			{
				return this._MAPHIEUDSTHIETBI;
			}
			set
			{
				if ((this._MAPHIEUDSTHIETBI != value))
				{
					this.OnMAPHIEUDSTHIETBIChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUDSTHIETBI = value;
					this.SendPropertyChanged("MAPHIEUDSTHIETBI");
					this.OnMAPHIEUDSTHIETBIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(15)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABAI", DbType="VarChar(15)")]
		public string MABAI
		{
			get
			{
				return this._MABAI;
			}
			set
			{
				if ((this._MABAI != value))
				{
					if (this._BAIHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMABAIChanging(value);
					this.SendPropertyChanging();
					this._MABAI = value;
					this.SendPropertyChanged("MABAI");
					this.OnMABAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="VarChar(15)")]
		public string MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDSTHIETBITHEOLOP_CTTHIETBITHEOLOP", Storage="_CTTHIETBITHEOLOPs", ThisKey="MAPHIEUDSTHIETBI", OtherKey="MAPHIEUDSTHIETBI")]
		public EntitySet<CTTHIETBITHEOLOP> CTTHIETBITHEOLOPs
		{
			get
			{
				return this._CTTHIETBITHEOLOPs;
			}
			set
			{
				this._CTTHIETBITHEOLOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDSTHIETBITHEOLOP_LICHHOC", Storage="_LICHHOCs", ThisKey="MAPHIEUDSTHIETBI", OtherKey="MAPHIEUDSTHIETBI")]
		public EntitySet<LICHHOC> LICHHOCs
		{
			get
			{
				return this._LICHHOCs;
			}
			set
			{
				this._LICHHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAIHOC_PHIEUDSTHIETBITHEOLOP", Storage="_BAIHOC", ThisKey="MABAI", OtherKey="MABAI", IsForeignKey=true)]
		public BAIHOC BAIHOC
		{
			get
			{
				return this._BAIHOC.Entity;
			}
			set
			{
				BAIHOC previousValue = this._BAIHOC.Entity;
				if (((previousValue != value) 
							|| (this._BAIHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BAIHOC.Entity = null;
						previousValue.PHIEUDSTHIETBITHEOLOPs.Remove(this);
					}
					this._BAIHOC.Entity = value;
					if ((value != null))
					{
						value.PHIEUDSTHIETBITHEOLOPs.Add(this);
						this._MABAI = value.MABAI;
					}
					else
					{
						this._MABAI = default(string);
					}
					this.SendPropertyChanged("BAIHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_PHIEUDSTHIETBITHEOLOP", Storage="_LOP", ThisKey="MALOP", OtherKey="MALOP", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.PHIEUDSTHIETBITHEOLOPs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.PHIEUDSTHIETBITHEOLOPs.Add(this);
						this._MALOP = value.MALOP;
					}
					else
					{
						this._MALOP = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUDSTHIETBITHEOLOP", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUDSTHIETBITHEOLOPs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUDSTHIETBITHEOLOPs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTTHIETBITHEOLOPs(CTTHIETBITHEOLOP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDSTHIETBITHEOLOP = this;
		}
		
		private void detach_CTTHIETBITHEOLOPs(CTTHIETBITHEOLOP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDSTHIETBITHEOLOP = null;
		}
		
		private void attach_LICHHOCs(LICHHOC entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDSTHIETBITHEOLOP = this;
		}
		
		private void detach_LICHHOCs(LICHHOC entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDSTHIETBITHEOLOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUGHINHANHUHONG")]
	public partial class PHIEUGHINHANHUHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_PHIEUGNHH;
		
		private string _MANV;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private EntitySet<CTPHIEUHH> _CTPHIEUHHs;
		
		private EntitySet<PHIEUTHANHLY> _PHIEUTHANHLies;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PHIEUGNHHChanging(string value);
    partial void OnID_PHIEUGNHHChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    #endregion
		
		public PHIEUGHINHANHUHONG()
		{
			this._CTPHIEUHHs = new EntitySet<CTPHIEUHH>(new Action<CTPHIEUHH>(this.attach_CTPHIEUHHs), new Action<CTPHIEUHH>(this.detach_CTPHIEUHHs));
			this._PHIEUTHANHLies = new EntitySet<PHIEUTHANHLY>(new Action<PHIEUTHANHLY>(this.attach_PHIEUTHANHLies), new Action<PHIEUTHANHLY>(this.detach_PHIEUTHANHLies));
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHIEUGNHH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_PHIEUGNHH
		{
			get
			{
				return this._ID_PHIEUGNHH;
			}
			set
			{
				if ((this._ID_PHIEUGNHH != value))
				{
					this.OnID_PHIEUGNHHChanging(value);
					this.SendPropertyChanging();
					this._ID_PHIEUGNHH = value;
					this.SendPropertyChanged("ID_PHIEUGNHH");
					this.OnID_PHIEUGNHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(15)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUGHINHANHUHONG_CTPHIEUHH", Storage="_CTPHIEUHHs", ThisKey="ID_PHIEUGNHH", OtherKey="ID_PHIEUGNHH")]
		public EntitySet<CTPHIEUHH> CTPHIEUHHs
		{
			get
			{
				return this._CTPHIEUHHs;
			}
			set
			{
				this._CTPHIEUHHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUGHINHANHUHONG_PHIEUTHANHLY", Storage="_PHIEUTHANHLies", ThisKey="ID_PHIEUGNHH", OtherKey="ID_PHIEUGNHH")]
		public EntitySet<PHIEUTHANHLY> PHIEUTHANHLies
		{
			get
			{
				return this._PHIEUTHANHLies;
			}
			set
			{
				this._PHIEUTHANHLies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUGHINHANHUHONG", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUGHINHANHUHONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUGHINHANHUHONGs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHIEUHHs(CTPHIEUHH entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUGHINHANHUHONG = this;
		}
		
		private void detach_CTPHIEUHHs(CTPHIEUHH entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUGHINHANHUHONG = null;
		}
		
		private void attach_PHIEUTHANHLies(PHIEUTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUGHINHANHUHONG = this;
		}
		
		private void detach_PHIEUTHANHLies(PHIEUTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUGHINHANHUHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUMUON")]
	public partial class PHIEUMUON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEUMUON;
		
		private string _MAGV;
		
		private System.Nullable<System.DateTime> _THOIGIANMUON;
		
		private System.Nullable<System.DateTime> _THOIGIANTRA;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<CHITIETPHIEUMUON> _CHITIETPHIEUMUONs;
		
		private EntitySet<PHIEUTRA> _PHIEUTRAs;
		
		private EntityRef<GIAOVIEN> _GIAOVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUMUONChanging(string value);
    partial void OnMAPHIEUMUONChanged();
    partial void OnMAGVChanging(string value);
    partial void OnMAGVChanged();
    partial void OnTHOIGIANMUONChanging(System.Nullable<System.DateTime> value);
    partial void OnTHOIGIANMUONChanged();
    partial void OnTHOIGIANTRAChanging(System.Nullable<System.DateTime> value);
    partial void OnTHOIGIANTRAChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public PHIEUMUON()
		{
			this._CHITIETPHIEUMUONs = new EntitySet<CHITIETPHIEUMUON>(new Action<CHITIETPHIEUMUON>(this.attach_CHITIETPHIEUMUONs), new Action<CHITIETPHIEUMUON>(this.detach_CHITIETPHIEUMUONs));
			this._PHIEUTRAs = new EntitySet<PHIEUTRA>(new Action<PHIEUTRA>(this.attach_PHIEUTRAs), new Action<PHIEUTRA>(this.detach_PHIEUTRAs));
			this._GIAOVIEN = default(EntityRef<GIAOVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUMUON", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUMUON
		{
			get
			{
				return this._MAPHIEUMUON;
			}
			set
			{
				if ((this._MAPHIEUMUON != value))
				{
					this.OnMAPHIEUMUONChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUMUON = value;
					this.SendPropertyChanged("MAPHIEUMUON");
					this.OnMAPHIEUMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGV", DbType="VarChar(15)")]
		public string MAGV
		{
			get
			{
				return this._MAGV;
			}
			set
			{
				if ((this._MAGV != value))
				{
					if (this._GIAOVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAGVChanging(value);
					this.SendPropertyChanging();
					this._MAGV = value;
					this.SendPropertyChanged("MAGV");
					this.OnMAGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANMUON", DbType="DateTime")]
		public System.Nullable<System.DateTime> THOIGIANMUON
		{
			get
			{
				return this._THOIGIANMUON;
			}
			set
			{
				if ((this._THOIGIANMUON != value))
				{
					this.OnTHOIGIANMUONChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANMUON = value;
					this.SendPropertyChanged("THOIGIANMUON");
					this.OnTHOIGIANMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANTRA", DbType="DateTime")]
		public System.Nullable<System.DateTime> THOIGIANTRA
		{
			get
			{
				return this._THOIGIANTRA;
			}
			set
			{
				if ((this._THOIGIANTRA != value))
				{
					this.OnTHOIGIANTRAChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANTRA = value;
					this.SendPropertyChanged("THOIGIANTRA");
					this.OnTHOIGIANTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUMUON_CHITIETPHIEUMUON", Storage="_CHITIETPHIEUMUONs", ThisKey="MAPHIEUMUON", OtherKey="MAPHIEUMUON")]
		public EntitySet<CHITIETPHIEUMUON> CHITIETPHIEUMUONs
		{
			get
			{
				return this._CHITIETPHIEUMUONs;
			}
			set
			{
				this._CHITIETPHIEUMUONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUMUON_PHIEUTRA", Storage="_PHIEUTRAs", ThisKey="MAPHIEUMUON", OtherKey="MAPHIEUMUON")]
		public EntitySet<PHIEUTRA> PHIEUTRAs
		{
			get
			{
				return this._PHIEUTRAs;
			}
			set
			{
				this._PHIEUTRAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_PHIEUMUON", Storage="_GIAOVIEN", ThisKey="MAGV", OtherKey="MAGV", IsForeignKey=true)]
		public GIAOVIEN GIAOVIEN
		{
			get
			{
				return this._GIAOVIEN.Entity;
			}
			set
			{
				GIAOVIEN previousValue = this._GIAOVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAOVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAOVIEN.Entity = null;
						previousValue.PHIEUMUONs.Remove(this);
					}
					this._GIAOVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUMUONs.Add(this);
						this._MAGV = value.MAGV;
					}
					else
					{
						this._MAGV = default(string);
					}
					this.SendPropertyChanged("GIAOVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPHIEUMUONs(CHITIETPHIEUMUON entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUMUON = this;
		}
		
		private void detach_CHITIETPHIEUMUONs(CHITIETPHIEUMUON entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUMUON = null;
		}
		
		private void attach_PHIEUTRAs(PHIEUTRA entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUMUON = this;
		}
		
		private void detach_PHIEUTRAs(PHIEUTRA entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUMUON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNGHIEMTHU")]
	public partial class PHIEUNGHIEMTHU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEUNGHIEMTHU;
		
		private string _MANV;
		
		private string _ID_LICH;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private EntitySet<CTPHIEUNGHIEMTHU> _CTPHIEUNGHIEMTHUs;
		
		private EntityRef<LICHHOC> _LICHHOC;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUNGHIEMTHUChanging(string value);
    partial void OnMAPHIEUNGHIEMTHUChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnID_LICHChanging(string value);
    partial void OnID_LICHChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    #endregion
		
		public PHIEUNGHIEMTHU()
		{
			this._CTPHIEUNGHIEMTHUs = new EntitySet<CTPHIEUNGHIEMTHU>(new Action<CTPHIEUNGHIEMTHU>(this.attach_CTPHIEUNGHIEMTHUs), new Action<CTPHIEUNGHIEMTHU>(this.detach_CTPHIEUNGHIEMTHUs));
			this._LICHHOC = default(EntityRef<LICHHOC>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUNGHIEMTHU", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUNGHIEMTHU
		{
			get
			{
				return this._MAPHIEUNGHIEMTHU;
			}
			set
			{
				if ((this._MAPHIEUNGHIEMTHU != value))
				{
					this.OnMAPHIEUNGHIEMTHUChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUNGHIEMTHU = value;
					this.SendPropertyChanged("MAPHIEUNGHIEMTHU");
					this.OnMAPHIEUNGHIEMTHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(15)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LICH", DbType="VarChar(10)")]
		public string ID_LICH
		{
			get
			{
				return this._ID_LICH;
			}
			set
			{
				if ((this._ID_LICH != value))
				{
					if (this._LICHHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LICHChanging(value);
					this.SendPropertyChanging();
					this._ID_LICH = value;
					this.SendPropertyChanged("ID_LICH");
					this.OnID_LICHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNGHIEMTHU_CTPHIEUNGHIEMTHU", Storage="_CTPHIEUNGHIEMTHUs", ThisKey="MAPHIEUNGHIEMTHU", OtherKey="MAPHIEUNGHIEMTHU")]
		public EntitySet<CTPHIEUNGHIEMTHU> CTPHIEUNGHIEMTHUs
		{
			get
			{
				return this._CTPHIEUNGHIEMTHUs;
			}
			set
			{
				this._CTPHIEUNGHIEMTHUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LICHHOC_PHIEUNGHIEMTHU", Storage="_LICHHOC", ThisKey="ID_LICH", OtherKey="ID_LICH", IsForeignKey=true)]
		public LICHHOC LICHHOC
		{
			get
			{
				return this._LICHHOC.Entity;
			}
			set
			{
				LICHHOC previousValue = this._LICHHOC.Entity;
				if (((previousValue != value) 
							|| (this._LICHHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LICHHOC.Entity = null;
						previousValue.PHIEUNGHIEMTHUs.Remove(this);
					}
					this._LICHHOC.Entity = value;
					if ((value != null))
					{
						value.PHIEUNGHIEMTHUs.Add(this);
						this._ID_LICH = value.ID_LICH;
					}
					else
					{
						this._ID_LICH = default(string);
					}
					this.SendPropertyChanged("LICHHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNGHIEMTHU", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUNGHIEMTHUs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUNGHIEMTHUs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHIEUNGHIEMTHUs(CTPHIEUNGHIEMTHU entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNGHIEMTHU = this;
		}
		
		private void detach_CTPHIEUNGHIEMTHUs(CTPHIEUNGHIEMTHU entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNGHIEMTHU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAP")]
	public partial class PHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEUNHAP;
		
		private string _MAPHIEUDAT;
		
		private string _MANV;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<bool> _TINHTRANG;
		
		private System.Nullable<double> _TONGTIEN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<PHIEUDAT> _PHIEUDAT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUNHAPChanging(string value);
    partial void OnMAPHIEUNHAPChanged();
    partial void OnMAPHIEUDATChanging(string value);
    partial void OnMAPHIEUDATChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnTINHTRANGChanging(System.Nullable<bool> value);
    partial void OnTINHTRANGChanged();
    partial void OnTONGTIENChanging(System.Nullable<double> value);
    partial void OnTONGTIENChanged();
    #endregion
		
		public PHIEUNHAP()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._PHIEUDAT = default(EntityRef<PHIEUDAT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUNHAP", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUNHAP
		{
			get
			{
				return this._MAPHIEUNHAP;
			}
			set
			{
				if ((this._MAPHIEUNHAP != value))
				{
					this.OnMAPHIEUNHAPChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUNHAP = value;
					this.SendPropertyChanged("MAPHIEUNHAP");
					this.OnMAPHIEUNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUDAT", DbType="VarChar(15)")]
		public string MAPHIEUDAT
		{
			get
			{
				return this._MAPHIEUDAT;
			}
			set
			{
				if ((this._MAPHIEUDAT != value))
				{
					if (this._PHIEUDAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUDATChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUDAT = value;
					this.SendPropertyChanged("MAPHIEUDAT");
					this.OnMAPHIEUDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(15)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Bit")]
		public System.Nullable<bool> TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Float")]
		public System.Nullable<double> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDAT_PHIEUNHAP", Storage="_PHIEUDAT", ThisKey="MAPHIEUDAT", OtherKey="MAPHIEUDAT", IsForeignKey=true)]
		public PHIEUDAT PHIEUDAT
		{
			get
			{
				return this._PHIEUDAT.Entity;
			}
			set
			{
				PHIEUDAT previousValue = this._PHIEUDAT.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUDAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUDAT.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._PHIEUDAT.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._MAPHIEUDAT = value.MAPHIEUDAT;
					}
					else
					{
						this._MAPHIEUDAT = default(string);
					}
					this.SendPropertyChanged("PHIEUDAT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUTHANHLY")]
	public partial class PHIEUTHANHLY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEU;
		
		private string _MANV;
		
		private string _ID_PHIEUGNHH;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private string _GHICHU;
		
		private System.Nullable<double> _TONGTIEN;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<CTTHANHLY> _CTTHANHLies;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<PHIEUGHINHANHUHONG> _PHIEUGHINHANHUHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUChanging(string value);
    partial void OnMAPHIEUChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnID_PHIEUGNHHChanging(string value);
    partial void OnID_PHIEUGNHHChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    partial void OnTONGTIENChanging(System.Nullable<double> value);
    partial void OnTONGTIENChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public PHIEUTHANHLY()
		{
			this._CTTHANHLies = new EntitySet<CTTHANHLY>(new Action<CTTHANHLY>(this.attach_CTTHANHLies), new Action<CTTHANHLY>(this.detach_CTTHANHLies));
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._PHIEUGHINHANHUHONG = default(EntityRef<PHIEUGHINHANHUHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEU", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEU
		{
			get
			{
				return this._MAPHIEU;
			}
			set
			{
				if ((this._MAPHIEU != value))
				{
					this.OnMAPHIEUChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEU = value;
					this.SendPropertyChanged("MAPHIEU");
					this.OnMAPHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(15)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHIEUGNHH", DbType="VarChar(10)")]
		public string ID_PHIEUGNHH
		{
			get
			{
				return this._ID_PHIEUGNHH;
			}
			set
			{
				if ((this._ID_PHIEUGNHH != value))
				{
					if (this._PHIEUGHINHANHUHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PHIEUGNHHChanging(value);
					this.SendPropertyChanging();
					this._ID_PHIEUGNHH = value;
					this.SendPropertyChanged("ID_PHIEUGNHH");
					this.OnID_PHIEUGNHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(100)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Float")]
		public System.Nullable<double> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUTHANHLY_CTTHANHLY", Storage="_CTTHANHLies", ThisKey="MAPHIEU", OtherKey="MAPHIEU")]
		public EntitySet<CTTHANHLY> CTTHANHLies
		{
			get
			{
				return this._CTTHANHLies;
			}
			set
			{
				this._CTTHANHLies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUTHANHLY", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUTHANHLies.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUTHANHLies.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUGHINHANHUHONG_PHIEUTHANHLY", Storage="_PHIEUGHINHANHUHONG", ThisKey="ID_PHIEUGNHH", OtherKey="ID_PHIEUGNHH", IsForeignKey=true)]
		public PHIEUGHINHANHUHONG PHIEUGHINHANHUHONG
		{
			get
			{
				return this._PHIEUGHINHANHUHONG.Entity;
			}
			set
			{
				PHIEUGHINHANHUHONG previousValue = this._PHIEUGHINHANHUHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUGHINHANHUHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUGHINHANHUHONG.Entity = null;
						previousValue.PHIEUTHANHLies.Remove(this);
					}
					this._PHIEUGHINHANHUHONG.Entity = value;
					if ((value != null))
					{
						value.PHIEUTHANHLies.Add(this);
						this._ID_PHIEUGNHH = value.ID_PHIEUGNHH;
					}
					else
					{
						this._ID_PHIEUGNHH = default(string);
					}
					this.SendPropertyChanged("PHIEUGHINHANHUHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTTHANHLies(CTTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUTHANHLY = this;
		}
		
		private void detach_CTTHANHLies(CTTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUTHANHLY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUTRA")]
	public partial class PHIEUTRA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEUTRA;
		
		private string _MAPHIEUMUON;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private EntitySet<CTPHIEUTRA> _CTPHIEUTRAs;
		
		private EntitySet<PHIEUXL> _PHIEUXLs;
		
		private EntityRef<PHIEUMUON> _PHIEUMUON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUTRAChanging(string value);
    partial void OnMAPHIEUTRAChanged();
    partial void OnMAPHIEUMUONChanging(string value);
    partial void OnMAPHIEUMUONChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    #endregion
		
		public PHIEUTRA()
		{
			this._CTPHIEUTRAs = new EntitySet<CTPHIEUTRA>(new Action<CTPHIEUTRA>(this.attach_CTPHIEUTRAs), new Action<CTPHIEUTRA>(this.detach_CTPHIEUTRAs));
			this._PHIEUXLs = new EntitySet<PHIEUXL>(new Action<PHIEUXL>(this.attach_PHIEUXLs), new Action<PHIEUXL>(this.detach_PHIEUXLs));
			this._PHIEUMUON = default(EntityRef<PHIEUMUON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUTRA", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUTRA
		{
			get
			{
				return this._MAPHIEUTRA;
			}
			set
			{
				if ((this._MAPHIEUTRA != value))
				{
					this.OnMAPHIEUTRAChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUTRA = value;
					this.SendPropertyChanged("MAPHIEUTRA");
					this.OnMAPHIEUTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUMUON", DbType="VarChar(15)")]
		public string MAPHIEUMUON
		{
			get
			{
				return this._MAPHIEUMUON;
			}
			set
			{
				if ((this._MAPHIEUMUON != value))
				{
					if (this._PHIEUMUON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUMUONChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUMUON = value;
					this.SendPropertyChanged("MAPHIEUMUON");
					this.OnMAPHIEUMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUTRA_CTPHIEUTRA", Storage="_CTPHIEUTRAs", ThisKey="MAPHIEUTRA", OtherKey="MAPHIEUTRA")]
		public EntitySet<CTPHIEUTRA> CTPHIEUTRAs
		{
			get
			{
				return this._CTPHIEUTRAs;
			}
			set
			{
				this._CTPHIEUTRAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUTRA_PHIEUXL", Storage="_PHIEUXLs", ThisKey="MAPHIEUTRA", OtherKey="MAPHIEUTRA")]
		public EntitySet<PHIEUXL> PHIEUXLs
		{
			get
			{
				return this._PHIEUXLs;
			}
			set
			{
				this._PHIEUXLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUMUON_PHIEUTRA", Storage="_PHIEUMUON", ThisKey="MAPHIEUMUON", OtherKey="MAPHIEUMUON", IsForeignKey=true)]
		public PHIEUMUON PHIEUMUON
		{
			get
			{
				return this._PHIEUMUON.Entity;
			}
			set
			{
				PHIEUMUON previousValue = this._PHIEUMUON.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUMUON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUMUON.Entity = null;
						previousValue.PHIEUTRAs.Remove(this);
					}
					this._PHIEUMUON.Entity = value;
					if ((value != null))
					{
						value.PHIEUTRAs.Add(this);
						this._MAPHIEUMUON = value.MAPHIEUMUON;
					}
					else
					{
						this._MAPHIEUMUON = default(string);
					}
					this.SendPropertyChanged("PHIEUMUON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHIEUTRAs(CTPHIEUTRA entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUTRA = this;
		}
		
		private void detach_CTPHIEUTRAs(CTPHIEUTRA entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUTRA = null;
		}
		
		private void attach_PHIEUXLs(PHIEUXL entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUTRA = this;
		}
		
		private void detach_PHIEUXLs(PHIEUXL entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUTRA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUXL")]
	public partial class PHIEUXL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEUXL;
		
		private string _MAPHIEUTRA;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<double> _TONGTIENDENBU;
		
		private EntitySet<CTPHEUXL> _CTPHEUXLs;
		
		private EntityRef<PHIEUTRA> _PHIEUTRA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUXLChanging(string value);
    partial void OnMAPHIEUXLChanged();
    partial void OnMAPHIEUTRAChanging(string value);
    partial void OnMAPHIEUTRAChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnTONGTIENDENBUChanging(System.Nullable<double> value);
    partial void OnTONGTIENDENBUChanged();
    #endregion
		
		public PHIEUXL()
		{
			this._CTPHEUXLs = new EntitySet<CTPHEUXL>(new Action<CTPHEUXL>(this.attach_CTPHEUXLs), new Action<CTPHEUXL>(this.detach_CTPHEUXLs));
			this._PHIEUTRA = default(EntityRef<PHIEUTRA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUXL", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUXL
		{
			get
			{
				return this._MAPHIEUXL;
			}
			set
			{
				if ((this._MAPHIEUXL != value))
				{
					this.OnMAPHIEUXLChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUXL = value;
					this.SendPropertyChanged("MAPHIEUXL");
					this.OnMAPHIEUXLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUTRA", DbType="VarChar(10)")]
		public string MAPHIEUTRA
		{
			get
			{
				return this._MAPHIEUTRA;
			}
			set
			{
				if ((this._MAPHIEUTRA != value))
				{
					if (this._PHIEUTRA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUTRAChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUTRA = value;
					this.SendPropertyChanged("MAPHIEUTRA");
					this.OnMAPHIEUTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIENDENBU", DbType="Float")]
		public System.Nullable<double> TONGTIENDENBU
		{
			get
			{
				return this._TONGTIENDENBU;
			}
			set
			{
				if ((this._TONGTIENDENBU != value))
				{
					this.OnTONGTIENDENBUChanging(value);
					this.SendPropertyChanging();
					this._TONGTIENDENBU = value;
					this.SendPropertyChanged("TONGTIENDENBU");
					this.OnTONGTIENDENBUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUXL_CTPHEUXL", Storage="_CTPHEUXLs", ThisKey="MAPHIEUXL", OtherKey="MAPHIEUXL")]
		public EntitySet<CTPHEUXL> CTPHEUXLs
		{
			get
			{
				return this._CTPHEUXLs;
			}
			set
			{
				this._CTPHEUXLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUTRA_PHIEUXL", Storage="_PHIEUTRA", ThisKey="MAPHIEUTRA", OtherKey="MAPHIEUTRA", IsForeignKey=true)]
		public PHIEUTRA PHIEUTRA
		{
			get
			{
				return this._PHIEUTRA.Entity;
			}
			set
			{
				PHIEUTRA previousValue = this._PHIEUTRA.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUTRA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUTRA.Entity = null;
						previousValue.PHIEUXLs.Remove(this);
					}
					this._PHIEUTRA.Entity = value;
					if ((value != null))
					{
						value.PHIEUXLs.Add(this);
						this._MAPHIEUTRA = value.MAPHIEUTRA;
					}
					else
					{
						this._MAPHIEUTRA = default(string);
					}
					this.SendPropertyChanged("PHIEUTRA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHEUXLs(CTPHEUXL entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUXL = this;
		}
		
		private void detach_CTPHEUXLs(CTPHEUXL entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUXL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHONG;
		
		private string _MALOAIPH;
		
		private string _TENPHONG;
		
		private EntitySet<LICHHOC> _LICHHOCs;
		
		private EntityRef<LOAIPHONG> _LOAIPHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnMALOAIPHChanging(string value);
    partial void OnMALOAIPHChanged();
    partial void OnTENPHONGChanging(string value);
    partial void OnTENPHONGChanged();
    #endregion
		
		public PHONG()
		{
			this._LICHHOCs = new EntitySet<LICHHOC>(new Action<LICHHOC>(this.attach_LICHHOCs), new Action<LICHHOC>(this.detach_LICHHOCs));
			this._LOAIPHONG = default(EntityRef<LOAIPHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIPH", DbType="VarChar(10)")]
		public string MALOAIPH
		{
			get
			{
				return this._MALOAIPH;
			}
			set
			{
				if ((this._MALOAIPH != value))
				{
					if (this._LOAIPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIPHChanging(value);
					this.SendPropertyChanging();
					this._MALOAIPH = value;
					this.SendPropertyChanged("MALOAIPH");
					this.OnMALOAIPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHONG", DbType="NVarChar(20)")]
		public string TENPHONG
		{
			get
			{
				return this._TENPHONG;
			}
			set
			{
				if ((this._TENPHONG != value))
				{
					this.OnTENPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENPHONG = value;
					this.SendPropertyChanged("TENPHONG");
					this.OnTENPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_LICHHOC", Storage="_LICHHOCs", ThisKey="MAPHONG", OtherKey="MAPHONG")]
		public EntitySet<LICHHOC> LICHHOCs
		{
			get
			{
				return this._LICHHOCs;
			}
			set
			{
				this._LICHHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIPHONG_PHONG", Storage="_LOAIPHONG", ThisKey="MALOAIPH", OtherKey="MALOAIPH", IsForeignKey=true)]
		public LOAIPHONG LOAIPHONG
		{
			get
			{
				return this._LOAIPHONG.Entity;
			}
			set
			{
				LOAIPHONG previousValue = this._LOAIPHONG.Entity;
				if (((previousValue != value) 
							|| (this._LOAIPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIPHONG.Entity = null;
						previousValue.PHONGs.Remove(this);
					}
					this._LOAIPHONG.Entity = value;
					if ((value != null))
					{
						value.PHONGs.Add(this);
						this._MALOAIPH = value.MALOAIPH;
					}
					else
					{
						this._MALOAIPH = default(string);
					}
					this.SendPropertyChanged("LOAIPHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LICHHOCs(LICHHOC entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_LICHHOCs(LICHHOC entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
	}
}
#pragma warning restore 1591
